{"version":3,"file":"graphjs.min.js","sources":["../../src/canvas/setupHiDefCanvas.js","../../src/canvas/Renderer.js","../../src/geometry/Vector.js","../../src/geometry/Geometry.js","../../src/graph/Link.js","../../src/graph/Node.js","../../src/graph/Graph.js","../../src/layout/ForceDirected.js","../../src/shape/Constants.js","../../src/shape/Shape.js","../../src/shape/Arc.js","../../src/shape/Circle.js","../../src/shape/Rectangle.js","../../src/InputDeviceTracker.js","../../src/MChart.js","../../src/geometry/Trigo.js","../../src/index.js"],"sourcesContent":["/**\n * Create a High Definition Canvas.\n *\n * @param {*} canvas\n * @returns Scaled 2d Context\n */\nexport default function setupHiDefCanvas(canvas) {\n\t// Get the device pixel ratio, falling back to 1.\n\tvar devicePixelRatio = window.devicePixelRatio || 1;\n\n\tvar ctx = canvas.getContext(\"2d\");\n\n\tconsole.log(\"─────────────────────────\")\n\tconsole.log(\"│ setupHiDefCanvas      │\")\n\tconsole.log(\"─────────────────────────\")\n\tconsole.log(\"  devicePixelRatio : \" + devicePixelRatio)\n\tconsole.log(\"  canvas.width  : \" + canvas.width)\n\tconsole.log(\"  canvas.height : \" + canvas.height)\n\n\t// Get the size of the canvas in CSS pixels.\n\tvar rect = canvas.getBoundingClientRect();\n\tconsole.log(\"  rect.width  : \" + rect.width)\n\tconsole.log(\"  rect.height : \" + rect.height)\n\n    const initialWidth = canvas.width;\n    const initialHeight = canvas.height;\n\n\n\t// On Hi Def like Retina display we double the size of the canvas\n\tcanvas.width = initialWidth * devicePixelRatio;\n\tcanvas.height = initialHeight * devicePixelRatio;\n    ctx.scale(devicePixelRatio, devicePixelRatio);\n\n\t// and we shrink the display size using CSS\n\tcanvas.style.width = initialWidth + 'px';\n    canvas.style.height = initialHeight + 'px';\n\n\tconsole.log(\"  canvas.style.width  : \" + canvas.style.width)\n\tconsole.log(\"  canvas.style.height  : \" + canvas.style.height)\n\n\tconsole.log(\"  canvas.width  : \" + canvas.width)\n\tconsole.log(\"  canvas.height : \" + canvas.height)\n\n\tconsole.log(\" └───────────────────────┘\")\n\n\treturn ctx;\n}","\n\nexport default class Renderer {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n    }\n\n    drawGrid(w, h) {\n\n        this.ctx.save()\n\n        this.ctx.fillStyle = 'white'\n        this.ctx.fillRect(0, 0, w, h)\n        this.ctx.lineWidth = 0.3;\n        this.ctx.strokeStyle = 'lightgray'\n        this.ctx.fillStyle = 'black'\n\n        for (let i = 1; i < w; i++) {\n            this.ctx.beginPath()\n            if (i % 10 === 0) {\n                this.ctx.moveTo(i, 0);\n                this.ctx.lineTo(i, h)\n                this.ctx.moveTo(i, 0);\n            }\n            this.ctx.closePath()\n            this.ctx.stroke()\n        }\n\n        for (let i = 1; i < h; i++) {\n            this.ctx.beginPath()\n            if (i % 10 === 0) {\n                this.ctx.moveTo(0, i)\n                this.ctx.lineTo(w, i)\n                this.ctx.moveTo(0, i)\n            }\n            this.ctx.closePath()\n            this.ctx.stroke()\n        }\n\n\n        this.ctx.lineWidth = 1\n        this.ctx.strokeStyle = 'gray'\n\n        this.ctx.beginPath()\n        for (let i = 50; i < w; i += 10) {\n            if (i % 50 === 0) {\n                this.ctx.moveTo(i, 0)\n                this.ctx.lineTo(i, 30)\n                this.ctx.fillText(` ${i}`, i, 30)\n            } else {\n                this.ctx.moveTo(i, 0)\n                this.ctx.lineTo(i, 10)\n            }\n\n        }\n        this.ctx.closePath()\n        this.ctx.stroke()\n\n        this.ctx.beginPath()\n        for (let i = 50; i < h; i += 10) {\n            if (i % 50 === 0) {\n                this.ctx.moveTo(0, i)\n                this.ctx.lineTo(30, i)\n                this.ctx.fillText(` ${i}`, 30, i)\n            } else {\n                this.ctx.moveTo(0, i)\n                this.ctx.lineTo(10, i)\n            }\n\n        }\n        this.ctx.closePath()\n        this.ctx.stroke()\n\n        this.ctx.restore()\n    }\n}","/**\n *  A vector is an entity that has both magnitude and direction.\n *  2D vector implementation based on the vector functions in P5.js\n */\n export class Vector {\n\tconstructor(x, y) {\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\n\t\tif (isNaN(x) || isNaN(y)) {\n\t\t\tconsole.warn(`Vector(): parameters are not number: (${x}), ${y} `);\n\t\t}\n\t}\n\n\tstatic add(v1, v2) {\n\t\treturn new Vector(v1.x + v2.x, v1.y + v2.y);\n\t}\n\n\t/**\n\t * Divides a vector by a scalar and returns a new vector.\n\t *\n\t * @method div\n\t * @static\n\t * @param  {Vector} v\n\t * @param  {Number}  n\n\t * @return  {Vector}\n\t */\n\tstatic div(v, n) {\n\t\tlet result = v.copy();\n\t\treturn result.div(n);\n\t}\n\n\t/**\n\t * Linear interpolate the vector to another vector\n\t */\n\tstatic lerp(v1, v2, amount) {\n\t\tlet result = v1.copy();\n\t\treturn result.lerp(v2, amount);\n\t}\n\n\tstatic random(min, max) {\n\t\tlet x = randomIntBounds(min, max);\n\t\tlet y = randomIntBounds(min, max);\n\t\treturn new Vector(x, y);\n\t}\n\n\tstatic sub(v1, v2) {\n\t\treturn new Vector(v1.x - v2.x, v1.y - v2.y);\n\t}\n\n\t/**\n\t * Supports adding a Vector or a Scalar\n\t * @param {*} n\n\t * @returns\n\t */\n\tadd(n) {\n\t\tif (n instanceof Vector) {\n\t\t\tthis.x += n.x;\n\t\t\tthis.y += n.y;\n\t\t\treturn this;\n\t\t} else if (typeof n === \"number\") {\n\t\t\tthis.x += n;\n\t\t\tthis.y += n;\n\t\t\treturn this;\n\t\t} else {\n\t\t\tconsole.error(`Parameter in Vector.add(n) Not supported: ${n})`);\n\t\t}\n\t}\n\n\t/**\n\t * Return a copy of this Vector\n\t * @returns\n\t */\n\tcopy() {\n\t\treturn new Vector(this.x, this.y);\n\t}\n\n\t/**\n\t * Divide vector length (ie magnitude) by a constant  \n\t */ \n\tdiv(n) {\n\t\tif (n === 0) {\n\t\t\t//console.warn(\"Vector.div:\", \"divide by 0\");\n\t\t\treturn this;\n\t\t}\n\t\tthis.x /= n;\n\t\tthis.y /= n;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Linear Interpolation\n\t */ \n\tlerp(v1, amount) {\n\t\tthis.x += (v1.x - this.x) * amount || 0;\n\t\tthis.y += (v1.y - this.y) * amount || 0;\n\t\treturn this;\n\t}\n\t/**\n\t * Returns the direction of the Vector\n\t * @returns \n\t */\n\theading() {\n\t\tconst h = Math.atan2(this.y, this.x);\n\t\treturn h;\n\t}\n\n\tmagSq() {\n\t\tconst x = this.x;\n\t\tconst y = this.y;\n\t\treturn x * x + y * y;\n\t}\n\n\tmag() {\n\t\treturn Math.sqrt(this.magSq());\n\t}\n\n\tnormalize() {\n\t\treturn this.div(this.mag());\n\t}\n\n\t/**\n\tMultiply vector length (ie magnitude) by a constant\n\t*/\n\tmult(n) {\n\t\tif (isNaN(n)) {\n\t\t\tconsole.error(`Vector.mult: parameter is not a number: (${n})`);\n\t\t}\n\t\tthis.x *= n;\n\t\tthis.y *= n;\n\t\treturn this;\n\t}\n\n\t/**\n\t *  set magnitude to a given value\n\t */\n\tsetMag(n) {\n\t\treturn this.normalize().mult(n);\n\t}\n\n\n\t/**\n\t * Substracts either a Vector or a scalar\n\t * @param {*} n \n\t * @returns \n\t */\n\tsub(n) {\n\t\tif (n instanceof Vector) {\n\t\t\tthis.x -= n.x;\n\t\t\tthis.y -= n.y;\n\t\t\treturn this;\n\t\t} else if (typeof n === \"number\") {\n\t\t\tthis.x -= n;\n\t\t\tthis.y -= n;\n\t\t\treturn this;\n\t\t} else {\n\t\t\tconsole.error(`Parameter in Vector.sub(n) Not supported: ${n})`);\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn \"[\" + this.x + \", \" + this.y + \"]\";\n\t}\n}\n\n/* Return a random integer between min and max (inclusive) */\nfunction randomIntBounds(min, max) {\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default Vector;","\n export function rectContainsShape(rectangle, shape) {\n\tif (shape.type == \"Circle\") {\n\t\treturn rectContainsCircle(rectangle, shape);\n\t} else if (shape.type == \"Rectangle\") {\n\t\treturn rectContainsRect(rectangle, shape);\n\t} else {\n\t\tconsole.error(\"rectContainsShape: shape is unknown: \" + shape);\n\t\tconsole.error( shape);\n\t}\n}\n\n/**\n *\n *\n *    x,y\n *    ┌────────────────────────┐ width\n *    │  x,y             width │\n *    │  ┌──────────────────┐  │\n *    │  │                  │  │\n *    │  │                  │  │\n *    │  │                  │  │\n *    │  └──────────────────┘  │\n *    │                  heigth│\n *    └────────────────────────┘ heigth\n\n * @param {*} rect1 \n * @param {*} rect2 \n * @returns \n */\n/*\n function rectContainsRect(rect1, rect2) {\n\tconsole.log(\"rectContainsRect\");\n\t// console.log(rect1.toStringCoordinates());\n\t// console.log(rect2.toStringCoordinates());\n\n\tvar result_X =\n\t\trect1.getX() < rect2.getX() &&\n\t\trect1.getX() + rect1.getWidth() < rect2.getX() + rect2.getWidth();\n\n\tvar result_Y =\n\t\trect1.getY() > rect2.getY() &&\n\t\trect1.getY() + rect1.getHeight() <= rect2.getY() + rect2.getHeight();\n\n\treturn result_X & result_Y;\n}\n*/\n\nfunction rectContainsRect(rect1, rect2) {\n\tvar result_X =\n\t\trect1.x < rect2.x && rect1.x + rect1.width > rect2.x + rect2.width;\n\n\tvar result_Y =\n\t\trect1.y < rect2.y && rect1.y + rect1.height > rect2.y + rect2.height;\n\n\treturn result_X & result_Y;\n}\n\n\n\n\n\nfunction rectContainsCircle(rectangle, circle) {\n\t// LEFT\n\tvar left_include = rectangle.x < circle.x - circle.radius;\n\tif (!left_include) {\n\t\t//circle is outside of the rectangle on the left side\n\t\treturn false;\n\t}\n\t// RIGHT\n\tvar right_include =\n\t\trectangle.x + rectangle.width > circle.x + circle.radius;\n\tif (!right_include) {\n\t\t//circle is outside of the rectangle on the right side\n\t\treturn false;\n\t}\n\t// BOTTOM\n\tvar bottom_include =\n\t\trectangle.y + rectangle.height > circle.y + circle.radius;\n\tif (!bottom_include) {\n\t\t//circle is outside of the rectangle on the bottom side\n\t\treturn false;\n\t}\n\t// TOP:\n\tvar top_include = rectangle.y < circle.y - circle.radius;\n\tif (!top_include) {\n\t\t//circle is outside of the rectangle on the top side\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n","export default class Link {\n\tconstructor(source, target) {\n\t\tif (source.id && target.id) {\n\t\t\tthis.id = source.id + \" → \" + target.id;\n\t\t} else {\n\t\t\tthis.id = source + \" → \" + target;\n\t\t}\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n}\n","import Vector from \"../geometry/Vector\";\n\n\nexport default class Node {\n\tconstructor(id, data) {\n\t\tthis.id = id;\n\n\t\tthis.data = data;\n\t\tthis.level = 0;\n\t\tthis.children = [];\n\t\tthis.parent;\n\t\tthis.neighbor;\n\t\tthis.isCollapsed = false;\n\n\t\tthis.size = 20;\n\t\tthis.mass = 13; //(6 * this.size) / 1.5;\n\t\tthis.radius = this.size;\n\n\t\tthis.pos = new Vector(0, 0);\n\t\tthis.velocity = new Vector(0, 0);\n\t\tthis.acceleration = new Vector(0, 0);\n\t}\n\n\ttoString() {\n\t\treturn \"Node \" + this.id + \"(\" + this.pos.x + \", \" + this.pos.y + \")\";\n\t}\n\n\taddChild(node) {\n\t\tthis.children.push(node);\n\t}\n\n\tgetAdjacents() {\n\t\treturn this.children;\n\t}\n\n\tisAdjacent(node) {\n\t\treturn this.children.indexOf(node) > -1;\n\t}\n\n\tgetChildAt(i) {\n\t\treturn this.children[i];\n\t}\n\n\tgetFirstChild() {\n\t\treturn this.getChildAt(0);\n\t}\n\n\tgetChildrenCount() {\n\t\treturn this.children.length;\n\t}\n\tisLeaf() {\n\t\treturn this.children && this.children.length == 0;\n\t}\n\thasChild() {\n\t\treturn this.children && this.children.length > 0;\n\t}\n\tgetLastChild() {\n\t\treturn this.getChildAt(this.getChildrenCount() - 1);\n\t}\n\tisAncestorCollapsed() {\n\t\tif (this.parent == null) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.parent.isCollapsed\n\t\t\t? true\n\t\t\t: this.parent.id === -1\n\t\t\t? false\n\t\t\t: this.parent.isAncestorCollapsed();\n\t}\n\n\t/**\n\t *  isLeftMost: is this node == to the first child of its parent?\n\t */\n\tisLeftMost() {\n\t\tif (!this.parent || this.parent === null) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn this.parent.getFirstChild() === this;\n\t\t}\n\t}\n\n\t/**\n\t *  isRightMost: is this node == to the last child of its parent?\n\t */\n\tisRightMost() {\n\t\tif (!this.parent || this.parent === null) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn this.parent.getLastChild() === this;\n\t\t}\n\t}\n\n\tgetLeftSibling() {\n\t\tif (this.parent === null || this.isLeftMost()) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tvar index = this.parent.children.indexOf(this);\n\t\t\treturn this.parent.children[index - 1];\n\t\t}\n\t}\n\n\tgetRightSibling() {\n\t\tif (this.parent === null || this.isRightMost()) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tvar index = this.parent.children.indexOf(this);\n\t\t\treturn this.parent.children[index + 1];\n\t\t}\n\t}\n\n\tgetLeftMostChild() {\n\t\tif (this.getChildrenCount() == 0) return null;\n\n\t\treturn this.children[0];\n\t}\n\n\tgetRightMostChild() {\n\t\tif (this.getChildrenCount() == 0) return null;\n\n\t\treturn this.children[this.getChildrenCount() - 1];\n\t}\n\n\thasLeftSibling() {\n\t\treturn !this.isLeftMost();\n\t}\n}\n","// =============================================================\n//                          Graph\n// =============================================================\nimport Link from \"./Link\";\nimport Node from \"./Node\";\n\nexport default class Graph {\n\tconstructor() {\n\t\tthis.graph = {};\n\t\tthis.nodeList = [];\n\t\tthis.linkList = [];\n\t\tthis.adjacency = {};\n\t\tthis.changed = false;\n\t\tthis.root;\n\t}\n\n\t/**\n\t * Add a node\n\t * @param {*} node\n\t * @returns\n\t */\n\taddNode(node) {\n\t\tif (!(node.id in this.graph)) {\n\t\t\tthis.nodeList.push(node);\n\t\t\tthis.graph[node.id] = node;\n\t\t} else {\n\t\t\tconsole.log(\"Node already exists: \" + node.id);\n\t\t}\n\t\treturn node;\n\t}\n\tgetNode(nodeID) {\n\t\tvar node = this.graph[nodeID];\n\t\treturn node;\n\t}\n\n\tnodeAt(index) {\n\t\tvar node = this.nodeList[index];\n\t\treturn node;\n\t}\n\n\t/**\n\t *  Add an object. Create a node from the specified object\n\t * @param {*} object\n\t * @returns\n\t */\n\taddObject(object) {\n\t\tvar node = new Node(object.id, object);\n\n\t\tif (object.parentId) {\n\t\t\tnode.parent = this.getNode(object.parentId);\n\t\t\tif (!node.parent) {\n\t\t\t\tconsole.error(\n\t\t\t\t\t\"Parent node not found for parentId: \" + object.parentId\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tnode.level = node.parent.level + 1;\n\t\t\t\tnode.parent.children.push(node);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.root = node;\n\t\t}\n\t\tthis.addNode(node);\n\t\tthis.changed = true;\n\t\treturn node;\n\t}\n\n\tgetLinkCount() {\n\t\treturn this.linkList.length;\n\t}\n\tgetNodeCount() {\n\t\treturn this.nodeList.length;\n\t}\n\n\taddLink(sourceNode_id, targetNode_id) {\n\t\tvar sourceNode = this.getNode(sourceNode_id);\n\t\tif (sourceNode == undefined) {\n\t\t\tthrow new TypeError(\n\t\t\t\t\"Trying to add a link to the non-existent node with id: \" +\n\t\t\t\tsourceNode_id\n\t\t\t);\n\t\t}\n\t\tvar targetNode = this.getNode(targetNode_id);\n\t\tif (targetNode == undefined) {\n\t\t\tthrow new TypeError(\n\t\t\t\t\"Trying to add a link to the non-existent node with id: \" +\n\t\t\t\ttargetNode_id\n\t\t\t);\n\t\t}\n\n\t\tvar link = new Link(sourceNode, targetNode);\n\t\tvar exists = false;\n\n\t\tthis.linkList.forEach(function (item) {\n\t\t\tif (link.id === item.id) {\n\t\t\t\texists = true;\n\t\t\t}\n\t\t});\n\n\t\tif (!exists) {\n\t\t\tthis.linkList.push(link);\n\t\t\tsourceNode.addChild(targetNode);\n\t\t} else {\n\t\t\tconsole.log(\n\t\t\t\t\"LINK EXIST: \" +\n\t\t\t\t\" source: \" +\n\t\t\t\tlink.source.id +\n\t\t\t\t\" => \" +\n\t\t\t\tlink.target.id\n\t\t\t);\n\t\t}\n\n\t\tif (!(link.source.id in this.adjacency)) {\n\t\t\tthis.adjacency[link.source.id] = {};\n\t\t}\n\t\tif (!(link.target.id in this.adjacency[link.source.id])) {\n\t\t\tthis.adjacency[link.source.id][link.target.id] = [];\n\t\t}\n\t\tthis.adjacency[link.source.id][link.target.id].push(link);\n\t}\n\n\tloadJSON(json_string) {\n\t\tconsole.log(\"Graph.loadJSON: json_string: \");\n\t\tconsole.log(json_string);\n\t\tvar json_object ;\n\t\tif (typeof json_string === \"string\") {\n\t\t\tconsole.log(\"Graph.loadJSON: input is of type string: \");\n\t\t\tjson_object = JSON.parse(json_string);\n\n\t\t}\n\t\telse if (typeof json_string === \"object\") {\n\t\t\tconsole.log(\"Graph.loadJSON: input is of type object: \");\n\t\t\tjson_object = json_string;\n\t\t}\n\n\t\tvar nodes = json_object[\"nodes\"];\n\t\tfor (let index = 0; index < nodes.length; index++) {\n\t\t\tvar node = nodes[index];\n\t\t\tthis.addObject(node);\n\t\t}\n\n\t\tvar links = json_object[\"links\"];\n\t\tif (links) {\n\t\t\tfor (let index = 0; index < links.length; index++) {\n\t\t\t\tvar link = links[index];\n\t\t\t\tthis.addLink(link.source, link.target);\n\t\t\t}\n\t\t}\n\t\tconsole.log(\"Graph.loadJSON \");\n\t\tconsole.log(this.graph);\n\t}\n\ttoString() {\n\t\treturn this.nodeList.map(printNode);\n\t}\n}\n\nfunction printNode(node) {\n\tvar adjacentsRepresentation = \"\";\n\tif (node.getAdjacents() == 0) {\n\t\tadjacentsRepresentation = \"no children\";\n\t} else {\n\t\tadjacentsRepresentation = node\n\t\t\t.getAdjacents()\n\t\t\t.map(function (item) {\n\t\t\t\treturn item.id;\n\t\t\t})\n\t\t\t.join(\", \");\n\t}\n\treturn node.id + \" => \" + adjacentsRepresentation;\n}\n","// =============================================================\n// Force Directed Layout\n// =============================================================\nimport Vector from \"../geometry/Vector\";\n\nexport default class ForceDirected {\n\tconstructor(graph, options) {\n\t\tthis.graph = graph;\n\t\tthis.initNodes();\n\n\t\tconst DEFAULTS = {\n\t\t\tGRAVITY: 0.9,\n\t\t\tREPULSION: 500000,\n\t\t};\n\t\tthis.options = Object.assign({}, DEFAULTS, options);\n\t}\n\n\tinitNodes() {\n\t\tlet min = -1000;\n\t\tlet max = 1000;\n\n\t\tthis.graph.nodeList.forEach((node) => {\n\t\t\tnode.pos = new Vector.random(min, max);\n\t\t});\n\t}\n\n\trun() {\n\t\t//requestAnimationFrame(this.animate);\n\t\tconsole.log(\"run\");\n\t}\n\n\tanimate = () => {\n\t\tconsole.log(\"animate\");\n\t};\n\n\t/**\n\t *  applyForce\n\t *\n\t *  Newton’s second law.\n\t *  Receive a force, divide by mass, and add to acceleration.\n\t */\n\tapplyForce(node, force) {\n\t\tlet forceOverMass = Vector.div(force, node.mass);\n\t\tnode.acceleration.add(forceOverMass);\n\t}\n\n\tupdateNodesVelocity() {\n\t\tthis.graph.nodeList.forEach((node) => {\n\t\t\tlet force_copy = node.acceleration.copy();\n\t\t\tlet forceOverMass = force_copy.div(node.mass);\n\t\t\t//\tnode.velocity.add( forceOverMass );\n\t\t\tnode.pos.add(forceOverMass);\n\n\t\t\t//\tnode.velocity.add(node.acceleration);\n\t\t\t//\tnode.pos.add(node.velocity);\n\t\t\t//\tnode.acceleration.mult(0);\n\t\t});\n\t}\n\n\tapplyForcesTowardsCenter() {\n\t\t// apply force towards center\n\t\tthis.graph.nodeList.forEach((node) => {\n\t\t\tlet gravity = node.pos.copy().mult(-1).mult(this.options.GRAVITY);\n\t\t\tnode.acceleration = gravity;\n\t\t\t//node.applyForce(gravity);\n\t\t\t//console.log(node);\n\t\t});\n\t}\n\n\tapplyRepulsiveForces() {\n\t\t// apply repulsive force between nodes\n\t\tfor (let i = 0; i < this.graph.nodeList.length; i++) {\n\t\t\tfor (let j = i + 1; j < this.graph.nodeList.length; j++) {\n\t\t\t\tif (i != j) {\n\t\t\t\t\tlet node1 = this.graph.nodeList[i];\n\t\t\t\t\tlet node2 = this.graph.nodeList[j];\n\t\t\t\t\t//console.log(\"applyRepulsiveForces\");\n\t\t\t\t\t//console.log(node1);\n\t\t\t\t\t//console.log(node2);\n\n\t\t\t\t\t// The gravitational force F between two bodies of mass m1 and m2 is\n\t\t\t\t\t// F = G*m1*m2 / r2\n\t\t\t\t\t// the vector that points from one object to the other\n\t\t\t\t\tlet dir = Vector.sub(node2.pos, node1.pos);\n\t\t\t\t\t// let unit = dir.copy().normalize()\n\n\t\t\t\t\t// the length (magnitude) of that vector is the distance between the two objects.\n\t\t\t\t\tlet distance = dir.mag();\n\n\t\t\t\t\t// The strength of the force is inversely proportional to the distance squared.\n\t\t\t\t\t// The farther away an object is, the weaker the force; the closer, the stronger.\n\t\t\t\t\t// original  : without the normalize\n\t\t\t\t\tdir.normalize();\n\n\t\t\t\t\tlet force1 = dir.mult(this.options.REPULSION);\n\t\t\t\t\tforce1.div(distance * distance);\n\n\t\t\t\t\tlet inverseForce = force1.copy().mult(-1);\n\t\t\t\t\tnode2.acceleration.add(force1);\n\t\t\t\t\tnode1.acceleration.add(inverseForce);\n\n\t\t\t\t\t//node2.applyForce(force1);\n\t\t\t\t\t//node1.applyForce(inverseForce);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tapplyForcesExertedByConnections() {\n\t\tthis.graph.linkList.forEach((link) => {\n\t\t\tlet node1 = link.source;\n\t\t\tlet node2 = link.target;\n\n\t\t\t//let maxDis = con[2];\n\t\t\t//let connector_length = 100;\n\n\t\t\tlet dir = Vector.sub(node1.pos, node2.pos);\n\n\t\t\tlet neg_force = new Vector(0, 0).sub(dir);\n\t\t\tlet pos_force = new Vector(0, 0).add(dir);\n\n\t\t\tnode1.acceleration.add(neg_force);\n\t\t\tnode2.acceleration.add(pos_force);\n\n\t\t\t//node1.applyForce(neg_force);\n\t\t\t//node2.applyForce(pos_force);\n\t\t});\n\t}\n\n\tapplyForces() {\n\t\t// Force equals mass times acceleration.\n\t\t// Newton’s second law, F→=M×A→ (or force = mass * acceleration).\n\t\tthis.applyForcesTowardsCenter();\n\n\t\tthis.applyRepulsiveForces();\n\n\t\tthis.applyForcesExertedByConnections();\n\n\t\tthis.updateNodesVelocity();\n\n\t\t// kinetic energy (KE) is equal to half of an object's mass (1/2*m) multiplied by the velocity squared.\n\t\t/*\n\t\tlet total_KE = 0.0;\n\t\tthis.graph.nodeList.forEach((node) => {\n\t\t\tlet velocity = node.velocity.mag();\n\n\t\t\tlet node_KE = 0.5 * node.mass * (velocity * velocity);\n\t\t\ttotal_KE = + node_KE;\n\n\t\t});\n\t\tconsole.warn(\"total_KE= \" + total_KE);\n\t\t*/\n\t}\n}\n","\n\nexport var NONE = \"none\";\nexport var pi = Math.PI;\n","import {NONE} from './Constants.js';\n\nexport default class Shape {\n    constructor(x, y, type) {\n        this.type = type;\n        this.x = x;\n        this.y = y;\n        this.isSelected = false;\n        this.strokeStyle = NONE;\n\n    }\n    getColor() {\n        return this.color;\n    }\n}","import Shape from './Shape.js';\nimport { NONE } from './Constants.js';\n\nexport default class Arc extends Shape {\n  constructor(x, y, radius, radians) {\n    super(x, y, \"Arc\");\n    this.radius = radius;\n    this.radians = radians;\n  }\n  isHit(x, y) {\n    var dx = this.x - x;\n    var dy = this.y - y;\n    if (dx * dx + dy * dy < this.radius * this.radius) {\n      return true;\n    }\n  }\n  render(ctx) {\n    ctx.save();\n\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, this.radians, false);\n\n    if (this.fillStyle) {\n      ctx.fillStyle = this.fillStyle;\n      ctx.fill();\n    }\n\n    if (this.strokeStyle != NONE) {\n      ctx.strokeStyle = this.strokeStyle;\n      ctx.lineWidth = this.lineWidth;\n      ctx.stroke();\n    }\n\n    ctx.restore();\n  }\n}","import Arc from './Arc.js';\n\n\nexport default class Circle extends Arc {\n    constructor(x, y, radius) {\n      super(x, y, radius, Math.PI *2);\n      this.type = \"Circle\";\n    }\n    isHit(x, y) {\n      var dx = this.x - x;\n      var dy = this.y - y;\n      if (dx * dx + dy * dy < this.radius * this.radius) {\n        return true;\n      }\n    }\n\n    getBBox() {\n      return {\n        x: this.x - this.radius,\n        y: this.y - this.radius,\n        width : this.radius * 2,\n        height : this.radius * 2\n      }\n    }\n  }","import Shape from './Shape.js';\nimport { NONE } from './Constants.js';\n\n\nexport default class Rectangle extends Shape {\n    constructor(x, y, width, height) {\n        super(x, y, \"Rectangle\");\n        this.width = width;\n        this.height = height;\n    }\n    getArea() {\n        return this.width * this.height;\n    }\n\n    isHit(x, y) {\n        if (\n            x > this.x &&\n            x < this.x + this.width &&\n            y > this.y &&\n            y < this.y + this.height\n        ) {\n            return true;\n        }\n    }\n    render(ctx) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(\n            this.x,\n            this.y,\n            this.width,\n            this.height\n        );\n\n        if (this.fillStyle) {\n            ctx.fillStyle = this.fillStyle;\n            ctx.fill();\n        }\n        if (this.strokeStyle != NONE) {\n            ctx.strokeStyle = this.strokeStyle;\n            ctx.lineWidth = this.lineWidth;\n            ctx.stroke();\n        }\n        ctx.restore();\n    }\n    toString() {\n        return `rectangle:  (${this.x},${this.y}) x (${this.width},${this.height})`;\n    }\n}","export default class InputDeviceTracker {\n\tconstructor(canvas, callback) {\n\t\tconsole.log(\"InputDeviceTracker ()\");\n\n\t\tthis.canvas = canvas;\n\t\tthis.callback = callback;\n\n\t\t/**\n\t\t *  Stores the panning offset between the initial location and the canvas location after is has been panned\n\t\t */\n\t\tthis.translatedPos = { x: 0, y: 0 };\n\n\t\t/**\n\t\t *  the accumulated horizontal(X) & vertical(Y) panning the user has done in total\n\t\t */\n\t\t(this.netPanningX = 0), (this.netPanningY = 0);\n\n\t\t/**\n\t\t *  coordinates of the last move\n\t\t */\n\t\t(this.lastMoveX = 0), (this.lastMoveY = 0);\n\n\t\tthis.startDragOffset = { x: 0, y: 0 };\n\n\t\tthis.canvas.addEventListener(\"mousedown\", this.onDown.bind(this));\n\t\tthis.canvas.addEventListener(\"mousemove\", this.onMove.bind(this));\n\t\tthis.canvas.addEventListener(\"mouseup\", this.onUp.bind(this));\n\n\t\tthis.canvas.addEventListener(\"touchstart\", this.onDown.bind(this));\n\t\tthis.canvas.addEventListener(\"touchmove\", this.onMove.bind(this));\n\t\tthis.canvas.addEventListener(\"touchend\", this.onUp.bind(this));\n\t}\n\n\tgetCoordinatesFromEvent(evt) {\n\t\tvar rect = self.canvas.getBoundingClientRect();\n\t\tvar offsetTop = rect.top;\n\t\tvar offsetLeft = rect.left;\n\n\t\tif (evt.touches) {\n\t\t\treturn {\n\t\t\t\tx: evt.touches[0].clientX - offsetLeft,\n\t\t\t\ty: evt.touches[0].clientY - offsetTop,\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tx: evt.clientX - offsetLeft,\n\t\t\t\ty: evt.clientY - offsetTop,\n\t\t\t};\n\t\t}\n\t}\n\n\tonDown(event) {\n\t\t// tell the browser we're handling this event\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tvar mouseCoords = this.getCoordinatesFromEvent(event);\n\n\t\t// initial mouse click signaling the start of the dragging motion: we save the location of the user's mouse.\n\t\t// dragging offest = current mouse - panning\n\t\tthis.startDragOffset.x = mouseCoords.x - this.translatedPos.x;\n\t\tthis.startDragOffset.y = mouseCoords.y - this.translatedPos.y;\n\n\t\tthis.callback(\"down\", mouseCoords.x, mouseCoords.y);\n\t}\n\n\tonUp(event) {\n\t\tevent.preventDefault();\n\t\tthis.callback(\"up\");\n\t}\n\n\tonMove(event) {\n\t\t// tell the browser we're handling this event\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tvar mouseCoords = this.getCoordinatesFromEvent(event);\n\t\tthis.callback(\"move\", mouseCoords.x, mouseCoords.y);\n\t}\n}\n","import InputDeviceTracker from \"./InputDeviceTracker\";\nimport { Rectangle, Circle } from \"./shape\";\nimport { Renderer, setupHiDefCanvas } from \"./canvas\";\nimport { rectContainsShape } from \"./geometry\";\n\nexport class MChart {\n\tconstructor(container, options) {\n\t\tconsole.log(\"MChart container()\");\n\t\tconsole.log(container);\n\t\tthis.container = container;\n\t\t(this.startX = 0), (this.startY = 0);\n\t\t(this.lastMoveX = 0), (this.lastMoveY = 0);\n\n\t\tthis.canvas = document.getElementById(\"canvas\");\n\t\t//this.ctx = this.canvas.getContext(\"2d\");\n\t\tthis.ctx = setupHiDefCanvas(this.canvas);\n\n\t\tthis.cw = this.canvas.width;\n\t\tthis.ch = this.canvas.height;\n\n\t\tthis.renderer = new Renderer(this.ctx);\n\t\tthis.inputDeviceTracker = new InputDeviceTracker(\n\t\t\tthis.canvas,\n\t\t\tthis.manageInputEvents.bind(this)\n\t\t);\n\n\t\tconst DEFAULTS = {\n\t\t\tdisplay_grid: false,\n\t\t\tselection: {\n\t\t\t\tstrokeStyle: \"#CC0000\", //  'rgba(255,51,0,1)', //'rgba(0,128,255,1)';\n\t\t\t\tlineWidth: 1,\n\t\t\t\tfillStyle: \"rgba(255,51,0,0.05)\", //'rgba(0,128,255, 0.2)';\n\t\t\t},\n\t\t};\n\t\tthis.options = Object.assign({}, DEFAULTS, options);\n\n\t\t/* The selection rectangle */\n\t\tthis.selection = new Rectangle(100, 100, 100, 100);\n\t\tthis.selection.strokeStyle = this.options.selection.strokeStyle;\n\t\tthis.selection.fillStyle = this.options.selection.fillStyle;\n\t\tthis.selection.lineWidth = this.options.selection.lineWidth;\n\n\t\t/* The list of ojbects to draw */\n\t\tthis.objects = [];\n\n\t\t/**\n\t\t *  Stores the panning offset between the initial location and the canvas location after is has been panned\n\t\t */\n\t\tthis.translatePos = { x: 0, y: 0 };\n\n\t\t/**\n\t\t *  the accumulated horizontal(X) & vertical(Y) panning the user has done in total\n\t\t */\n\t\tthis.netPanningX = 0;\n\t\tthis.netPanningY = 0;\n\n\t\t/**\n\t\t *  coordinates of the last move\n\t\t */\n\t\tthis.lastMoveX = 0; this.lastMoveY = 0;\n\n\t\tthis.isSelecting = false;\n\t\tthis.isDragging = false;\n\t\tthis.clicked_on_the_canvas = false;\n\t}\n\n\tdump() {\n\t\tconsole.log(\"MChart container= \");\n\t\tconsole.log(\"- objects= \");\n\t\tconsole.log(this.objects);\n\t}\n\n\taddObject(object) {\n\t\tthis.objects.push(object);\n\t\t//this.draw();\n\t}\n\n\t/**\n\t *  Private function to render one frame. It is being called by render()\n\t */\n\trenderFrame = () => {\n\t\t// console.log(\"renderFrame\")\n\t\tthis.ctx.clearRect(0, 0, this.cw, this.ch);\n\n\t\tif (this.options.display_grid) {\n\t\t\tthis.renderer.drawGrid(this.cw, this.ch);\n\t\t}\n\n\t\tthis.objects.forEach((object) => {\n\t\t\tobject.render(this.ctx);\n\t\t\tif (object.isSelected) {\n\t\t\t\tvar selection;\n\t\t\t\tif (object instanceof Circle) {\n\t\t\t\t\tvar bbox = object.getBBox();\n\t\t\t\t\tselection = new Rectangle(\n\t\t\t\t\t\tbbox.x,\n\t\t\t\t\t\tbbox.y,\n\t\t\t\t\t\tbbox.width,\n\t\t\t\t\t\tbbox.height\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tselection = new Rectangle(\n\t\t\t\t\t\tobject.x,\n\t\t\t\t\t\tobject.y,\n\t\t\t\t\t\tobject.width,\n\t\t\t\t\t\tobject.height\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tselection.strokeStyle = this.options.selection.strokeStyle;\n\t\t\t\tselection.lineWidth = this.options.selection.lineWidth;\n\t\t\t\tselection.render(this.ctx);\n\n\t\t\t}\n\n\t\t\tif (this.isSelecting == true) {\n\t\t\t\tthis.selection.render(this.ctx);\n\t\t\t}\n\t\t});\n\t};\n\n\trender() {\n\t\tthis.renderFrame();\n\t\twindow.requestAnimationFrame(this.render.bind(this, this.canvas));\n\t}\n\n\tmanageInputEvents(evtType, x, y) {\n\t\tswitch (evtType) {\n\t\t\tcase \"down\":\n\t\t\t\tthis.mouseIsDown = true;\n\n\t\t\t\tthis.startX = x;\n\t\t\t\tthis.startY = y;\n\t\t\t\tthis.lastMoveX = x;\n\t\t\t\tthis.lastMoveY = y;\n\n\t\t\t\t/* we assume the user clicked on the canvas unless we find an object was hit */\n\t\t\t\tthis.clicked_on_the_canvas = true;\n\n\t\t\t\t// we start from last to check the shape that is on top first\n\t\t\t\tfor (var i = this.objects.length - 1; i >= 0; i--) {\n\t\t\t\t\tvar object = this.objects[i];\n\t\t\t\t\t//    console.log (\"checking for hit object = \" + object.color);\n\t\t\t\t\tif (object.isHit(x, y)) {\n\t\t\t\t\t\tobject.isSelected = true;\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\"Clicked on : \" +\n\t\t\t\t\t\t\t\tobject.constructor.name +\n\t\t\t\t\t\t\t\t\"/\" +\n\t\t\t\t\t\t\t\tobject.fillStyle\n\t\t\t\t\t\t);\n\t\t\t\t\t\tmoveObjectToLastPosition(this.objects, object);\n\t\t\t\t\t\tthis.clicked_on_the_canvas = false;\n\t\t\t\t\t\tthis.isSelecting = false;\n\t\t\t\t\t\tthis.isDragging = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(\n\t\t\t\t\t\"clicked on the canvas = \" + this.clicked_on_the_canvas\n\t\t\t\t);\n\n\t\t\t\tif (this.clicked_on_the_canvas) {\n\t\t\t\t\tconsole.log(\"clicked on the canvas\");\n\t\t\t\t\tthis.selection_startX = x;\n\t\t\t\t\tthis.selection_startY = y;\n\n\t\t\t\t\t/* reset selection if user clicked on the canvas */\n\t\t\t\t\tthis.objects.forEach((object) => {\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\"RESET object \" +\n\t\t\t\t\t\t\t\tobject.fillStyle +\n\t\t\t\t\t\t\t\t\" is Circle ? \" +\n\t\t\t\t\t\t\t\t(object instanceof Circle)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tobject.isSelected = false;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"up\":\n\t\t\t\tthis.mouseIsDown = false;\n\t\t\t\tconsole.log(\"MOUSE UP\");\n\t\t\t\tconsole.log(\" isDragging : \" + this.isDragging);\n\t\t\t\tconsole.log(\" isSelecting : \" + this.isSelecting);\n\n\t\t\t\tif (this.isSelecting) {\n\t\t\t\t\tconsole.log(\" selection : \" + this.selection);\n\t\t\t\t\t/* check if selection includes any object */\n\t\t\t\t\tthis.objects.forEach((object) => {\n\t\t\t\t\t\tif (rectContainsShape(this.selection, object)) {\n\t\t\t\t\t\t\tobject.isSelected = true;\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"object is selected: \" +\n\t\t\t\t\t\t\t\t\tobject.constructor.name +\n\t\t\t\t\t\t\t\t\t\"/\" +\n\t\t\t\t\t\t\t\t\tobject.fillStyle\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.isSelecting = false;\n\t\t\t\tthis.isDragging = false;\n\t\t\t\tbreak;\n\n\t\t\tcase \"move\":\n\t\t\t\tif (this.clicked_on_the_canvas && this.mouseIsDown) {\n\t\t\t\t\tthis.isSelecting = true;\n\t\t\t\t\t// getting the min & max to handle when the user selects from bottom right to top left\n\t\t\t\t\tconst x1 = Math.min(this.selection_startX, this.lastMoveX);\n\t\t\t\t\tconst y1 = Math.min(this.selection_startY, this.lastMoveY);\n\t\t\t\t\tconst x2 = Math.max(this.selection_startX, this.lastMoveX);\n\t\t\t\t\tconst y2 = Math.max(this.selection_startY, this.lastMoveY);\n\n\t\t\t\t\tthis.selection.x = Math.floor(x1);\n\t\t\t\t\tthis.selection.y = Math.floor(y1);\n\t\t\t\t\tthis.selection.width = Math.floor(x2 - x1);\n\t\t\t\t\tthis.selection.height = Math.floor(y2 - y1);\n\t\t\t\t}\n\t\t\t\tthis.lastMoveX = x;\n\t\t\t\tthis.lastMoveY = y;\n\n\t\t\t\tvar dx = x - this.startX;\n\t\t\t\tvar dy = y - this.startY;\n\n\t\t\t\tthis.startX = x;\n\t\t\t\tthis.startY = y;\n\n\t\t\t\tif (this.isDragging) {\n\t\t\t\t\tthis.objects.forEach((object) => {\n\t\t\t\t\t\tif (object.isSelected) {\n\t\t\t\t\t\t\tobject.x += dx;\n\t\t\t\t\t\t\tobject.y += dy;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tinit() {\n\t\tthis.inputDeviceTracker = new InputDeviceTracker(\n\t\t\tthis.canvas,\n\t\t\tthis.manageInputEvents.bind(this)\n\t\t);\n\t}\n}\n\n/**\n *  We move the node selection to the last position so that it is drawn above the other shapes on the canvas\n */\nfunction moveObjectToLastPosition(object_list, object_to_move) {\n\tobject_list.forEach(function (object, index) {\n\t\tif (object === object_to_move) {\n\t\t\tobject_list.splice(index, 1);\n\t\t\tobject_list.push(object_to_move);\n\t\t\treturn;\n\t\t}\n\t});\n}","// =============================================================\n//                          TRIGO FUNCTIONS\n// =============================================================\nexport const TWO_PI = Math.PI * 2;\n\n/**\n * Concernt mouse (x, y) relative to the center of the circle\n */\nexport function ConvertMousePositionToCoordinateGraph(mousePos, center) {\n  return {\n    x: mousePos.x - center.x,\n    y: -1 * (mousePos.y - center.y)\n  }\n}\n\nexport function to_radians(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\nexport function to_degrees(radians) {\n  return radians * (180 / Math.PI);\n}\n\nexport function distanceXY(x0, y0, x1, y1) {\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nexport function pointInCircle(point, circle) {\n  return distanceXY(point.x, point.y, circle.x, circle.y) < circle.radius;\n}\n\n/**\n * Convert from cartesian coordinates (x, y) to polar coordinates (r, θ).\n * @param {*} cx \n * @param {*} cy \n * @param {*} r \n * @param {*} angle \n * @returns \n */\nexport function getPointOnArc(cx, cy, r, angle) {\n  return {\n    x: cx + r * Math.cos(angle),\n    y: cy + r * Math.sin(angle)\n  };\n}\nexport function __getPointOnArc(point, r, angle) {\n  return {\n    x: point.x + r * Math.cos(angle),\n    y: point.y + r * Math.sin(angle)\n  };\n\n}\nexport function rotate(x, y, angle) {\n  return {\n    x: x * Math.cos(angle) - y * Math.sin(angle),\n    y: x * Math.sin(angle) + y * Math.cos(angle)\n  };\n}\n\n/*\n * Returns the angle θ between 2 points\n */\nfunction findAngle(p1, p2) {\n  var angleRAD = Math.atan2(p2.y - p1.y, p2.x - p1.x);\n  return angleRAD;\n}\n\n/**\n * Calculates the midpoint between two points [x1,y1] &  [x2,y2]\n */\nexport function midpoint(x1, y1, x2, y2) {\n  return {\n    x: (x1 + x2) / 2,\n    y: (y1 + y2) / 2\n  };\n}\n\n\n//bearing between the compass'center point and the specified point\nexport function __getBearing(point) {\n  var compass_points = [\"N\", \"NE\", \"E\", \"SE\", \"S\", \"SW\", \"W\", \"NW\", \"N\"];\n  var bearing = findAngle(\n    { x: this.cx, y: -this.cy },\n    { x: point.x, y: -point.y });\n\n    var bearingTT;\n  if (bearing < 0) {\n     bearingTT = 360 + bearing;\n   } \n   else {\n     bearingTT = bearing;\n   }\n  var compass_lookup = Math.round(bearingTT / 45);\n//  log(bearingTT + \" \" + compass_lookup + \" - \" + bearing);\n  return compass_points[compass_lookup];\n}","\nexport * from \"./canvas\";\nexport * from \"./geometry\";\nexport * from \"./graph\";\nexport * from \"./layout\";\nexport * from \"./shape\";\n\nexport {MChart} from \"./MChart\";\n\nexport var version = \"0.1\"\n\n\n"],"names":["setupHiDefCanvas","canvas","devicePixelRatio","window","ctx","getContext","console","log","width","height","rect","getBoundingClientRect","initialWidth","initialHeight","scale","style","Renderer","w","h","save","fillStyle","fillRect","lineWidth","strokeStyle","i","beginPath","moveTo","lineTo","closePath","stroke","fillText","restore","Vector","x","y","isNaN","warn","n","this","error","v1","amount","Math","atan2","sqrt","magSq","div","mag","normalize","mult","v2","v","copy","lerp","min","max","randomIntBounds","floor","random","rectContainsShape","rectangle","shape","type","circle","radius","rectContainsCircle","rect2","result_X","rect1","result_Y","Link","source","target","id","Node","data","level","children","parent","neighbor","isCollapsed","size","mass","pos","velocity","acceleration","node","push","indexOf","getChildAt","length","getChildrenCount","isAncestorCollapsed","getFirstChild","getLastChild","isLeftMost","index","isRightMost","Graph","graph","nodeList","linkList","adjacency","changed","root","nodeID","object","parentId","getNode","addNode","sourceNode_id","targetNode_id","sourceNode","undefined","TypeError","targetNode","link","exists","forEach","item","addChild","json_string","json_object","JSON","parse","_typeof","nodes","addObject","links","addLink","map","printNode","adjacentsRepresentation","getAdjacents","join","ForceDirected","options","initNodes","Object","assign","GRAVITY","REPULSION","force","forceOverMass","add","gravity","_this","j","node1","node2","dir","sub","distance","force1","inverseForce","neg_force","pos_force","applyForcesTowardsCenter","applyRepulsiveForces","applyForcesExertedByConnections","updateNodesVelocity","NONE","Shape","isSelected","color","Arc","radians","dx","dy","arc","fill","Circle","PI","Rectangle","InputDeviceTracker","callback","translatedPos","netPanningX","netPanningY","lastMoveX","lastMoveY","startDragOffset","addEventListener","onDown","bind","onMove","onUp","evt","self","offsetTop","top","offsetLeft","left","touches","clientX","clientY","event","preventDefault","stopPropagation","mouseCoords","getCoordinatesFromEvent","MChart","container","clearRect","cw","ch","display_grid","renderer","drawGrid","objects","render","selection","bbox","getBBox","isSelecting","startX","startY","document","getElementById","inputDeviceTracker","manageInputEvents","translatePos","isDragging","clicked_on_the_canvas","renderFrame","requestAnimationFrame","evtType","mouseIsDown","isHit","constructor","name","moveObjectToLastPosition","selection_startX","selection_startY","_this2","x1","y1","x2","y2","object_list","object_to_move","splice","degrees"],"mappings":"+OAMe,SAASA,EAAiBC,OAEpCC,EAAmBC,OAAOD,kBAAoB,EAE9CE,EAAMH,EAAOI,WAAW,MAE5BC,QAAQC,IAAI,6BACZD,QAAQC,IAAI,6BACZD,QAAQC,IAAI,6BACZD,QAAQC,IAAI,wBAA0BL,GACtCI,QAAQC,IAAI,qBAAuBN,EAAOO,OAC1CF,QAAQC,IAAI,qBAAuBN,EAAOQ,YAGtCC,EAAOT,EAAOU,wBAClBL,QAAQC,IAAI,mBAAqBG,EAAKF,OACtCF,QAAQC,IAAI,mBAAqBG,EAAKD,YAE7BG,EAAeX,EAAOO,MACtBK,EAAgBZ,EAAOQ,cAIhCR,EAAOO,MAAQI,EAAeV,EAC9BD,EAAOQ,OAASI,EAAgBX,EAC7BE,EAAIU,MAAMZ,EAAkBA,GAG/BD,EAAOc,MAAMP,MAAQI,EAAe,KACjCX,EAAOc,MAAMN,OAASI,EAAgB,KAEzCP,QAAQC,IAAI,2BAA6BN,EAAOc,MAAMP,OACtDF,QAAQC,IAAI,4BAA8BN,EAAOc,MAAMN,QAEvDH,QAAQC,IAAI,qBAAuBN,EAAOO,OAC1CF,QAAQC,IAAI,qBAAuBN,EAAOQ,QAE1CH,QAAQC,IAAI,8BAELH,uzDC3CaY,wBAELZ,kBACHA,IAAMA,oCAGf,SAASa,EAAGC,QAEHd,IAAIe,YAEJf,IAAIgB,UAAY,aAChBhB,IAAIiB,SAAS,EAAG,EAAGJ,EAAGC,QACtBd,IAAIkB,UAAY,QAChBlB,IAAImB,YAAc,iBAClBnB,IAAIgB,UAAY,YAEhB,IAAII,EAAI,EAAGA,EAAIP,EAAGO,SACdpB,IAAIqB,YACLD,EAAI,IAAO,SACNpB,IAAIsB,OAAOF,EAAG,QACdpB,IAAIuB,OAAOH,EAAGN,QACdd,IAAIsB,OAAOF,EAAG,SAElBpB,IAAIwB,iBACJxB,IAAIyB,aAGR,IAAIL,EAAI,EAAGA,EAAIN,EAAGM,SACdpB,IAAIqB,YACLD,EAAI,IAAO,SACNpB,IAAIsB,OAAO,EAAGF,QACdpB,IAAIuB,OAAOV,EAAGO,QACdpB,IAAIsB,OAAO,EAAGF,SAElBpB,IAAIwB,iBACJxB,IAAIyB,cAIRzB,IAAIkB,UAAY,OAChBlB,IAAImB,YAAc,YAElBnB,IAAIqB,gBACJ,IAAID,EAAI,GAAIA,EAAIP,EAAGO,GAAK,GACrBA,EAAI,IAAO,QACNpB,IAAIsB,OAAOF,EAAG,QACdpB,IAAIuB,OAAOH,EAAG,SACdpB,IAAI0B,oBAAaN,GAAKA,EAAG,WAEzBpB,IAAIsB,OAAOF,EAAG,QACdpB,IAAIuB,OAAOH,EAAG,UAItBpB,IAAIwB,iBACJxB,IAAIyB,cAEJzB,IAAIqB,gBACJ,IAAID,EAAI,GAAIA,EAAIN,EAAGM,GAAK,GACrBA,EAAI,IAAO,QACNpB,IAAIsB,OAAO,EAAGF,QACdpB,IAAIuB,OAAO,GAAIH,QACfpB,IAAI0B,oBAAaN,GAAK,GAAIA,UAE1BpB,IAAIsB,OAAO,EAAGF,QACdpB,IAAIuB,OAAO,GAAIH,SAIvBpB,IAAIwB,iBACJxB,IAAIyB,cAEJzB,IAAI2B,uBCtEHC,wBACDC,EAAGC,kBACTD,EAAIA,GAAK,OACTC,EAAIA,GAAK,GAEVC,MAAMF,IAAME,MAAMD,KACrB5B,QAAQ8B,qDAA8CH,gBAAOC,8CA6C3DG,UACCA,aAAaL,QACXC,GAAKI,EAAEJ,OACPC,GAAKG,EAAEH,EACLI,MACgB,iBAAND,QACZJ,GAAKI,OACLH,GAAKG,EACHC,WAEPhC,QAAQiC,0DAAmDF,4BAQ7D,kBACQ,IAAIL,EAAOM,KAAKL,EAAGK,KAAKJ,sBAMhC,SAAIG,UACO,IAANA,SAICJ,GAAKI,OACLH,GAAKG,GAHFC,yBAUT,SAAKE,EAAIC,eACHR,IAAMO,EAAGP,EAAIK,KAAKL,GAAKQ,GAAU,OACjCP,IAAMM,EAAGN,EAAII,KAAKJ,GAAKO,GAAU,EAC/BH,4BAMR,kBACWI,KAAKC,MAAML,KAAKJ,EAAGI,KAAKL,wBAInC,eACOA,EAAIK,KAAKL,EACTC,EAAII,KAAKJ,SACRD,EAAIA,EAAIC,EAAIA,qBAGpB,kBACQQ,KAAKE,KAAKN,KAAKO,kCAGvB,kBACQP,KAAKQ,IAAIR,KAAKS,2BAMtB,SAAKV,UACAF,MAAME,IACT/B,QAAQiC,yDAAkDF,aAEtDJ,GAAKI,OACLH,GAAKG,EACHC,2BAMR,SAAOD,UACCC,KAAKU,YAAYC,KAAKZ,sBAS9B,SAAIA,UACCA,aAAaL,QACXC,GAAKI,EAAEJ,OACPC,GAAKG,EAAEH,EACLI,MACgB,iBAAND,QACZJ,GAAKI,OACLH,GAAKG,EACHC,WAEPhC,QAAQiC,0DAAmDF,gCAI7D,iBACQ,IAAMC,KAAKL,EAAI,KAAOK,KAAKJ,EAAI,yBAnJvC,SAAWM,EAAIU,UACP,IAAIlB,EAAOQ,EAAGP,EAAIiB,EAAGjB,EAAGO,EAAGN,EAAIgB,EAAGhB,sBAY1C,SAAWiB,EAAGd,UACAc,EAAEC,OACDN,IAAIT,uBAMnB,SAAYG,EAAIU,EAAIT,UACND,EAAGY,OACFC,KAAKH,EAAIT,yBAGxB,SAAca,EAAKC,UAGX,IAAIvB,EAFHwB,EAAgBF,EAAKC,GACrBC,EAAgBF,EAAKC,uBAI9B,SAAWf,EAAIU,UACP,IAAIlB,EAAOQ,EAAGP,EAAIiB,EAAGjB,EAAGO,EAAGN,EAAIgB,EAAGhB,YAuH3C,SAASsB,EAAgBF,EAAKC,UACtBb,KAAKe,MAAMf,KAAKgB,UAAYH,EAAMD,EAAM,GAAKA,GCtK7C,SAASK,EAAkBC,EAAWC,SAC3B,UAAdA,EAAMC,KA4DX,SAA4BF,EAAWG,QAEnBH,EAAU3B,EAAI8B,EAAO9B,EAAI8B,EAAOC,eAG3C,OAIPJ,EAAU3B,EAAI2B,EAAUpD,MAAQuD,EAAO9B,EAAI8B,EAAOC,eAG3C,OAIPJ,EAAU1B,EAAI0B,EAAUnD,OAASsD,EAAO7B,EAAI6B,EAAOC,eAG5C,OAGUJ,EAAU1B,EAAI6B,EAAO7B,EAAI6B,EAAOC,eAG1C,SAED,EAtFCC,CAAmBL,EAAWC,GACb,aAAdA,EAAMC,MA4CeI,EA3CIL,EA4ChCM,GADqBC,EA3CAR,GA6ClB3B,EAAIiC,EAAMjC,GAAKmC,EAAMnC,EAAImC,EAAM5D,MAAQ0D,EAAMjC,EAAIiC,EAAM1D,MAE1D6D,EACHD,EAAMlC,EAAIgC,EAAMhC,GAAKkC,EAAMlC,EAAIkC,EAAM3D,OAASyD,EAAMhC,EAAIgC,EAAMzD,OAExD0D,EAAWE,IAhDjB/D,QAAQiC,MAAM,wCAA0CsB,QACxDvD,QAAQiC,MAAOsB,IAwCjB,IAA0BO,EAAOF,EAC5BC,EAGAE,MCpDgBC,EACpB,WAAYC,EAAQC,aACfD,EAAOE,IAAMD,EAAOC,QAClBA,GAAKF,EAAOE,GAAK,MAAQD,EAAOC,QAEhCA,GAAKF,EAAS,MAAQC,OAEvBD,OAASA,OACTC,OAASA,GCLKE,wBACRD,EAAIE,kBACVF,GAAKA,OAELE,KAAOA,OACPC,MAAQ,OACRC,SAAW,QACXC,YACAC,cACAC,aAAc,OAEdC,KAAO,QACPC,KAAO,QACPlB,OAAS1B,KAAK2C,UAEdE,IAAM,IAAInD,EAAO,EAAG,QACpBoD,SAAW,IAAIpD,EAAO,EAAG,QACzBqD,aAAe,IAAIrD,EAAO,EAAG,qCAGnC,iBACQ,QAAUM,KAAKmC,GAAK,IAAMnC,KAAK6C,IAAIlD,EAAI,KAAOK,KAAK6C,IAAIjD,EAAI,4BAGnE,SAASoD,QACHT,SAASU,KAAKD,+BAGpB,kBACQhD,KAAKuC,mCAGb,SAAWS,UACHhD,KAAKuC,SAASW,QAAQF,IAAS,4BAGvC,SAAW9D,UACHc,KAAKuC,SAASrD,gCAGtB,kBACQc,KAAKmD,WAAW,mCAGxB,kBACQnD,KAAKuC,SAASa,6BAEtB,kBACQpD,KAAKuC,UAAoC,GAAxBvC,KAAKuC,SAASa,+BAEvC,kBACQpD,KAAKuC,UAAYvC,KAAKuC,SAASa,OAAS,8BAEhD,kBACQpD,KAAKmD,WAAWnD,KAAKqD,mBAAqB,sCAElD,kBACoB,MAAfrD,KAAKwC,WAGFxC,KAAKwC,OAAOE,cAEI,IAApB1C,KAAKwC,OAAOL,IAEZnC,KAAKwC,OAAOc,iDAMhB,kBACMtD,KAAKwC,QAA0B,OAAhBxC,KAAKwC,QAGjBxC,KAAKwC,OAAOe,kBAAoBvD,gCAOzC,kBACMA,KAAKwC,QAA0B,OAAhBxC,KAAKwC,QAGjBxC,KAAKwC,OAAOgB,iBAAmBxD,mCAIxC,cACqB,OAAhBA,KAAKwC,QAAmBxC,KAAKyD,oBACzB,SAEHC,EAAQ1D,KAAKwC,OAAOD,SAASW,QAAQlD,aAClCA,KAAKwC,OAAOD,SAASmB,EAAQ,kCAItC,cACqB,OAAhB1D,KAAKwC,QAAmBxC,KAAK2D,qBACzB,SAEHD,EAAQ1D,KAAKwC,OAAOD,SAASW,QAAQlD,aAClCA,KAAKwC,OAAOD,SAASmB,EAAQ,mCAItC,kBACgC,GAA3B1D,KAAKqD,mBAAgC,KAElCrD,KAAKuC,SAAS,oCAGtB,kBACgC,GAA3BvC,KAAKqD,mBAAgC,KAElCrD,KAAKuC,SAASvC,KAAKqD,mBAAqB,iCAGhD,kBACSrD,KAAKyD,sBCrHMG,yCAEdC,MAAQ,QACRC,SAAW,QACXC,SAAW,QACXC,UAAY,QACZC,SAAU,OACVC,sCAQN,SAAQlB,UACDA,EAAKb,MAAMnC,KAAK6D,MAIrB7F,QAAQC,IAAI,wBAA0B+E,EAAKb,UAHtC2B,SAASb,KAAKD,QACda,MAAMb,EAAKb,IAAMa,GAIhBA,yBAER,SAAQmB,UACInE,KAAK6D,MAAMM,yBAIvB,SAAOT,UACK1D,KAAK8D,SAASJ,4BAS1B,SAAUU,OACLpB,EAAO,IAAIZ,EAAKgC,EAAOjC,GAAIiC,UAE3BA,EAAOC,UACVrB,EAAKR,OAASxC,KAAKsE,QAAQF,EAAOC,UAC7BrB,EAAKR,QAKTQ,EAAKV,MAAQU,EAAKR,OAAOF,MAAQ,EACjCU,EAAKR,OAAOD,SAASU,KAAKD,IAL1BhF,QAAQiC,MACP,uCAAyCmE,EAAOC,gBAO7CH,KAAOlB,OAERuB,QAAQvB,QACRiB,SAAU,EACRjB,8BAGR,kBACQhD,KAAK+D,SAASX,mCAEtB,kBACQpD,KAAK8D,SAASV,8BAGtB,SAAQoB,EAAeC,OAClBC,EAAa1E,KAAKsE,QAAQE,MACZG,MAAdD,QACG,IAAIE,UACT,0DACAJ,OAGEK,EAAa7E,KAAKsE,QAAQG,MACZE,MAAdE,QACG,IAAID,UACT,0DACAH,OAIEK,EAAO,IAAI9C,EAAK0C,EAAYG,GAC5BE,GAAS,OAERhB,SAASiB,SAAQ,SAAUC,GAC3BH,EAAK3C,KAAO8C,EAAK9C,KACpB4C,GAAS,MAINA,EAIJ/G,QAAQC,IACP,wBAEA6G,EAAK7C,OAAOE,GACZ,OACA2C,EAAK5C,OAAOC,UARR4B,SAASd,KAAK6B,GACnBJ,EAAWQ,SAASL,IAWfC,EAAK7C,OAAOE,MAAMnC,KAAKgE,iBACvBA,UAAUc,EAAK7C,OAAOE,IAAM,IAE5B2C,EAAK5C,OAAOC,MAAMnC,KAAKgE,UAAUc,EAAK7C,OAAOE,WAC7C6B,UAAUc,EAAK7C,OAAOE,IAAI2C,EAAK5C,OAAOC,IAAM,SAE7C6B,UAAUc,EAAK7C,OAAOE,IAAI2C,EAAK5C,OAAOC,IAAIc,KAAK6B,2BAGrD,SAASK,OAGJC,EAFJpH,QAAQC,IAAI,iCACZD,QAAQC,IAAIkH,GAEe,iBAAhBA,GACVnH,QAAQC,IAAI,6CACZmH,EAAcC,KAAKC,MAAMH,IAGM,WAAvBI,EAAOJ,KACfnH,QAAQC,IAAI,6CACZmH,EAAcD,WAGXK,EAAQJ,EAAW,MACd1B,EAAQ,EAAGA,EAAQ8B,EAAMpC,OAAQM,IAAS,KAC9CV,EAAOwC,EAAM9B,QACZ+B,UAAUzC,OAGZ0C,EAAQN,EAAW,SACnBM,MACE,IAAIhC,EAAQ,EAAGA,EAAQgC,EAAMtC,OAAQM,IAAS,KAC9CoB,EAAOY,EAAMhC,QACZiC,QAAQb,EAAK7C,OAAQ6C,EAAK5C,QAGjClE,QAAQC,IAAI,mBACZD,QAAQC,IAAI+B,KAAK6D,+BAElB,kBACQ7D,KAAK8D,SAAS8B,IAAIC,YAI3B,SAASA,EAAU7C,OACd8C,EAA0B,UAE7BA,EAD0B,GAAvB9C,EAAK+C,eACkB,cAEA/C,EACxB+C,eACAH,KAAI,SAAUX,UACPA,EAAK9C,MAEZ6D,KAAK,MAEDhD,EAAKb,GAAK,OAAS2D,MClKNG,wBACRpC,EAAOqC,+BAyBT,WACTlI,QAAQC,IAAI,mBAzBP4F,MAAQA,OACRsC,iBAMAD,QAAUE,OAAOC,OAAO,GAJZ,CAChBC,QAAS,GACTC,UAAW,KAE+BL,sCAG5C,gBAIMrC,MAAMC,SAASkB,SAAQ,SAAChC,GAC5BA,EAAKH,IAAM,IAAInD,EAAO0B,QAJb,IACA,2BAOX,WAECpD,QAAQC,IAAI,0CAaF+E,EAAMwD,OACZC,EAAgB/G,EAAOc,IAAIgG,EAAOxD,EAAKJ,MAC3CI,EAAKD,aAAa2D,IAAID,sCAGvB,gBACM5C,MAAMC,SAASkB,SAAQ,SAAChC,OAExByD,EADazD,EAAKD,aAAajC,OACJN,IAAIwC,EAAKJ,MAExCI,EAAKH,IAAI6D,IAAID,8CAQf,2BAEM5C,MAAMC,SAASkB,SAAQ,SAAChC,OACxB2D,EAAU3D,EAAKH,IAAI/B,OAAOH,MAAM,GAAGA,KAAKiG,EAAKV,QAAQI,SACzDtD,EAAKD,aAAe4D,yCAMtB,eAEM,IAAIzH,EAAI,EAAGA,EAAIc,KAAK6D,MAAMC,SAASV,OAAQlE,QAC1C,IAAI2H,EAAI3H,EAAI,EAAG2H,EAAI7G,KAAK6D,MAAMC,SAASV,OAAQyD,OAC/C3H,GAAK2H,EAAG,KACPC,EAAQ9G,KAAK6D,MAAMC,SAAS5E,GAC5B6H,EAAQ/G,KAAK6D,MAAMC,SAAS+C,GAQ5BG,EAAMtH,EAAOuH,IAAIF,EAAMlE,IAAKiE,EAAMjE,KAIlCqE,EAAWF,EAAIvG,MAKnBuG,EAAItG,gBAEAyG,EAASH,EAAIrG,KAAKX,KAAKkG,QAAQK,WACnCY,EAAO3G,IAAI0G,EAAWA,OAElBE,EAAeD,EAAOrG,OAAOH,MAAM,GACvCoG,EAAMhE,aAAa2D,IAAIS,GACvBL,EAAM/D,aAAa2D,IAAIU,mDAS3B,gBACMvD,MAAME,SAASiB,SAAQ,SAACF,OACxBgC,EAAQhC,EAAK7C,OACb8E,EAAQjC,EAAK5C,OAKb8E,EAAMtH,EAAOuH,IAAIH,EAAMjE,IAAKkE,EAAMlE,KAElCwE,EAAY,IAAI3H,EAAO,EAAG,GAAGuH,IAAID,GACjCM,EAAY,IAAI5H,EAAO,EAAG,GAAGgH,IAAIM,GAErCF,EAAM/D,aAAa2D,IAAIW,GACvBN,EAAMhE,aAAa2D,IAAIY,iCAOzB,gBAGMC,gCAEAC,4BAEAC,uCAEAC,+BCxIIC,EAAO,OCAGC,wBACLjI,EAAGC,EAAG4B,kBACTA,KAAOA,OACP7B,EAAIA,OACJC,EAAIA,OACJiI,YAAa,OACb5I,YAAc0I,oCAGvB,kBACW3H,KAAK8H,eCTCC,2CACPpI,EAAGC,EAAG8B,EAAQsG,yCAClBrI,EAAGC,EAAG,QACP8B,OAASA,IACTsG,QAAUA,mCAEjB,SAAMrI,EAAGC,OACHqI,EAAKjI,KAAKL,EAAIA,EACduI,EAAKlI,KAAKJ,EAAIA,KACdqI,EAAKA,EAAKC,EAAKA,EAAKlI,KAAK0B,OAAS1B,KAAK0B,cAClC,wBAGX,SAAO5D,GACLA,EAAIe,OAEJf,EAAIqB,YACJrB,EAAIqK,IAAInI,KAAKL,EAAGK,KAAKJ,EAAGI,KAAK0B,OAAQ,EAAG1B,KAAKgI,SAAS,GAElDhI,KAAKlB,YACPhB,EAAIgB,UAAYkB,KAAKlB,UACrBhB,EAAIsK,QAGFpI,KAAKf,aAAe0I,IACtB7J,EAAImB,YAAce,KAAKf,YACvBnB,EAAIkB,UAAYgB,KAAKhB,UACrBlB,EAAIyB,UAGNzB,EAAI2B,iBA9ByBmI,GCAZS,2CACL1I,EAAGC,EAAG8B,yCACV/B,EAAGC,EAAG8B,EAAiB,EAATtB,KAAKkI,KACpB9G,KAAO,0CAEd,SAAM7B,EAAGC,OACHqI,EAAKjI,KAAKL,EAAIA,EACduI,EAAKlI,KAAKJ,EAAIA,KACdqI,EAAKA,EAAKC,EAAKA,EAAKlI,KAAK0B,OAAS1B,KAAK0B,cAClC,yBAIX,iBACS,CACL/B,EAAGK,KAAKL,EAAIK,KAAK0B,OACjB9B,EAAGI,KAAKJ,EAAII,KAAK0B,OACjBxD,MAAsB,EAAd8B,KAAK0B,OACbvD,OAAuB,EAAd6B,KAAK0B,eAlBcqG,GCCfQ,2CACL5I,EAAGC,EAAG1B,EAAOC,yCACfwB,EAAGC,EAAG,cACP1B,MAAQA,IACRC,OAASA,qCAElB,kBACW6B,KAAK9B,MAAQ8B,KAAK7B,4BAG7B,SAAMwB,EAAGC,MAEDD,EAAIK,KAAKL,GACTA,EAAIK,KAAKL,EAAIK,KAAK9B,OAClB0B,EAAII,KAAKJ,GACTA,EAAII,KAAKJ,EAAII,KAAK7B,cAEX,wBAGf,SAAOL,GACHA,EAAIe,OACJf,EAAIqB,YACJrB,EAAIM,KACA4B,KAAKL,EACLK,KAAKJ,EACLI,KAAK9B,MACL8B,KAAK7B,QAGL6B,KAAKlB,YACLhB,EAAIgB,UAAYkB,KAAKlB,UACrBhB,EAAIsK,QAEJpI,KAAKf,aAAe0I,IACpB7J,EAAImB,YAAce,KAAKf,YACvBnB,EAAIkB,UAAYgB,KAAKhB,UACrBlB,EAAIyB,UAERzB,EAAI2B,kCAER,wCAC2BO,KAAKL,cAAKK,KAAKJ,kBAASI,KAAK9B,kBAAS8B,KAAK7B,mBA1CnCyJ,GCJlBY,wBACR7K,EAAQ8K,aACnBzK,QAAQC,IAAI,8BAEPN,OAASA,OACT8K,SAAWA,OAKXC,cAAgB,CAAE/I,EAAG,EAAGC,EAAG,QAK1B+I,YAAc,EAAK3I,KAAK4I,YAAc,OAKtCC,UAAY,EAAK7I,KAAK8I,UAAY,OAEnCC,gBAAkB,CAAEpJ,EAAG,EAAGC,EAAG,QAE7BjC,OAAOqL,iBAAiB,YAAahJ,KAAKiJ,OAAOC,KAAKlJ,YACtDrC,OAAOqL,iBAAiB,YAAahJ,KAAKmJ,OAAOD,KAAKlJ,YACtDrC,OAAOqL,iBAAiB,UAAWhJ,KAAKoJ,KAAKF,KAAKlJ,YAElDrC,OAAOqL,iBAAiB,aAAchJ,KAAKiJ,OAAOC,KAAKlJ,YACvDrC,OAAOqL,iBAAiB,YAAahJ,KAAKmJ,OAAOD,KAAKlJ,YACtDrC,OAAOqL,iBAAiB,WAAYhJ,KAAKoJ,KAAKF,KAAKlJ,wDAGzD,SAAwBqJ,OACnBjL,EAAOkL,KAAK3L,OAAOU,wBACnBkL,EAAYnL,EAAKoL,IACjBC,EAAarL,EAAKsL,YAElBL,EAAIM,QACA,CACNhK,EAAG0J,EAAIM,QAAQ,GAAGC,QAAUH,EAC5B7J,EAAGyJ,EAAIM,QAAQ,GAAGE,QAAUN,GAGtB,CACN5J,EAAG0J,EAAIO,QAAUH,EACjB7J,EAAGyJ,EAAIQ,QAAUN,yBAKpB,SAAOO,GAENA,EAAMC,iBACND,EAAME,sBACFC,EAAcjK,KAAKkK,wBAAwBJ,QAI1Cf,gBAAgBpJ,EAAIsK,EAAYtK,EAAIK,KAAK0I,cAAc/I,OACvDoJ,gBAAgBnJ,EAAIqK,EAAYrK,EAAII,KAAK0I,cAAc9I,OAEvD6I,SAAS,OAAQwB,EAAYtK,EAAGsK,EAAYrK,uBAGlD,SAAKkK,GACJA,EAAMC,sBACDtB,SAAS,4BAGf,SAAOqB,GAENA,EAAMC,iBACND,EAAME,sBACFC,EAAcjK,KAAKkK,wBAAwBJ,QAC1CrB,SAAS,OAAQwB,EAAYtK,EAAGsK,EAAYrK,YCtEtCuK,wBACAC,EAAWlE,8CA0ET,WAEbU,EAAK9I,IAAIuM,UAAU,EAAG,EAAGzD,EAAK0D,GAAI1D,EAAK2D,IAEnC3D,EAAKV,QAAQsE,cAChB5D,EAAK6D,SAASC,SAAS9D,EAAK0D,GAAI1D,EAAK2D,IAGtC3D,EAAK+D,QAAQ3F,SAAQ,SAACZ,MACrBA,EAAOwG,OAAOhE,EAAK9I,KACfsG,EAAOyD,WAAY,KAClBgD,KACAzG,aAAkBiE,EAAQ,KACzByC,EAAO1G,EAAO2G,UAClBF,EAAY,IAAItC,EACfuC,EAAKnL,EACLmL,EAAKlL,EACLkL,EAAK5M,MACL4M,EAAK3M,aAGN0M,EAAY,IAAItC,EACfnE,EAAOzE,EACPyE,EAAOxE,EACPwE,EAAOlG,MACPkG,EAAOjG,QAGT0M,EAAU5L,YAAc2H,EAAKV,QAAQ2E,UAAU5L,YAC/C4L,EAAU7L,UAAY4H,EAAKV,QAAQ2E,UAAU7L,UAC7C6L,EAAUD,OAAOhE,EAAK9I,KAIC,GAApB8I,EAAKoE,aACRpE,EAAKiE,UAAUD,OAAOhE,EAAK9I,WA5G7BE,QAAQC,IAAI,sBACZD,QAAQC,IAAImM,QACPA,UAAYA,OACXa,OAAS,EAAKjL,KAAKkL,OAAS,OAC5BrC,UAAY,EAAK7I,KAAK8I,UAAY,OAEnCnL,OAASwN,SAASC,eAAe,eAEjCtN,IAAMJ,EAAiBsC,KAAKrC,aAE5B2M,GAAKtK,KAAKrC,OAAOO,WACjBqM,GAAKvK,KAAKrC,OAAOQ,YAEjBsM,SAAW,IAAI/L,EAASsB,KAAKlC,UAC7BuN,mBAAqB,IAAI7C,EAC7BxI,KAAKrC,OACLqC,KAAKsL,kBAAkBpC,KAAKlJ,YAWxBkG,QAAUE,OAAOC,OAAO,GARZ,CAChBmE,cAAc,EACdK,UAAW,CACV5L,YAAa,UACbD,UAAW,EACXF,UAAW,wBAG8BoH,QAGtC2E,UAAY,IAAItC,EAAU,IAAK,IAAK,IAAK,UACzCsC,UAAU5L,YAAce,KAAKkG,QAAQ2E,UAAU5L,iBAC/C4L,UAAU/L,UAAYkB,KAAKkG,QAAQ2E,UAAU/L,eAC7C+L,UAAU7L,UAAYgB,KAAKkG,QAAQ2E,UAAU7L,eAG7C2L,QAAU,QAKVY,aAAe,CAAE5L,EAAG,EAAGC,EAAG,QAK1B+I,YAAc,OACdC,YAAc,OAKdC,UAAY,OAAQC,UAAY,OAEhCkC,aAAc,OACdQ,YAAa,OACbC,uBAAwB,gCAG9B,WACCzN,QAAQC,IAAI,sBACZD,QAAQC,IAAI,eACZD,QAAQC,IAAI+B,KAAK2K,kCAGlB,SAAUvG,QACJuG,QAAQ1H,KAAKmB,yBA+CnB,gBACMsH,cACL7N,OAAO8N,sBAAsB3L,KAAK4K,OAAO1B,KAAKlJ,KAAMA,KAAKrC,0CAG1D,SAAkBiO,EAASjM,EAAGC,qBACrBgM,OACF,YACCC,aAAc,OAEdZ,OAAStL,OACTuL,OAAStL,OACTiJ,UAAYlJ,OACZmJ,UAAYlJ,OAGZ6L,uBAAwB,MAGxB,IAAIvM,EAAIc,KAAK2K,QAAQvH,OAAS,EAAGlE,GAAK,EAAGA,IAAK,KAC9CkF,EAASpE,KAAK2K,QAAQzL,GAEtBkF,EAAO0H,MAAMnM,EAAGC,KACnBwE,EAAOyD,YAAa,EACpB7J,QAAQC,IACP,gBACCmG,EAAO2H,YAAYC,KACnB,IACA5H,EAAOtF,WAETmN,EAAyBjM,KAAK2K,QAASvG,QAClCqH,uBAAwB,OACxBT,aAAc,OACdQ,YAAa,GAGpBxN,QAAQC,IACP,2BAA6B+B,KAAKyL,uBAG/BzL,KAAKyL,wBACRzN,QAAQC,IAAI,8BACPiO,iBAAmBvM,OACnBwM,iBAAmBvM,OAGnB+K,QAAQ3F,SAAQ,SAACZ,GACrBpG,QAAQC,IACP,gBACCmG,EAAOtF,UACP,iBACCsF,aAAkBiE,IAErBjE,EAAOyD,YAAa,gBAKlB,UACCgE,aAAc,EACnB7N,QAAQC,IAAI,YACZD,QAAQC,IAAI,iBAAmB+B,KAAKwL,YACpCxN,QAAQC,IAAI,kBAAoB+B,KAAKgL,aAEjChL,KAAKgL,cACRhN,QAAQC,IAAI,gBAAkB+B,KAAK6K,gBAE9BF,QAAQ3F,SAAQ,SAACZ,GACjB/C,EAAkB+K,EAAKvB,UAAWzG,KACrCA,EAAOyD,YAAa,EACpB7J,QAAQC,IACP,uBACCmG,EAAO2H,YAAYC,KACnB,IACA5H,EAAOtF,qBAMPkM,aAAc,OACdQ,YAAa,YAGd,UACAxL,KAAKyL,uBAAyBzL,KAAK6L,YAAa,MAC9Cb,aAAc,MAEbqB,EAAKjM,KAAKY,IAAIhB,KAAKkM,iBAAkBlM,KAAK6I,WAC1CyD,EAAKlM,KAAKY,IAAIhB,KAAKmM,iBAAkBnM,KAAK8I,WAC1CyD,EAAKnM,KAAKa,IAAIjB,KAAKkM,iBAAkBlM,KAAK6I,WAC1C2D,EAAKpM,KAAKa,IAAIjB,KAAKmM,iBAAkBnM,KAAK8I,gBAE3C+B,UAAUlL,EAAIS,KAAKe,MAAMkL,QACzBxB,UAAUjL,EAAIQ,KAAKe,MAAMmL,QACzBzB,UAAU3M,MAAQkC,KAAKe,MAAMoL,EAAKF,QAClCxB,UAAU1M,OAASiC,KAAKe,MAAMqL,EAAKF,QAEpCzD,UAAYlJ,OACZmJ,UAAYlJ,MAEbqI,EAAKtI,EAAIK,KAAKiL,OACd/C,EAAKtI,EAAII,KAAKkL,YAEbD,OAAStL,OACTuL,OAAStL,EAEVI,KAAKwL,iBACHb,QAAQ3F,SAAQ,SAACZ,GACjBA,EAAOyD,aACVzD,EAAOzE,GAAKsI,EACZ7D,EAAOxE,GAAKsI,2BAQlB,gBACMmD,mBAAqB,IAAI7C,EAC7BxI,KAAKrC,OACLqC,KAAKsL,kBAAkBpC,KAAKlJ,gBAQ/B,SAASiM,EAAyBQ,EAAaC,GAC9CD,EAAYzH,SAAQ,SAAUZ,EAAQV,MACjCU,IAAWsI,SACdD,EAAYE,OAAOjJ,EAAO,QAC1B+I,EAAYxJ,KAAKyJ,gLC/Ob,SAAoBE,UAClBA,GAAWxM,KAAKkI,GAAK,gBCPT"}