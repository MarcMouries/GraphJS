{"version":3,"file":"graphjs.min.js","sources":["../../src/canvas/setupHiDefCanvas.js","../../src/canvas/Renderer.js","../../src/geometry/Vector.js","../../src/geometry/Geometry.js","../../src/graph/Link.js","../../src/graph/Node.js","../../src/graph/Graph.js","../../src/graph/TreeNode.js","../../src/graph/Tree.js","../../src/layout/AbstractGraphLayout.js","../../src/layout/ForceDirected.js","../../src/layout/TreeLayout.js","../../src/shape/Constants.js","../../src/shape/Shape.js","../../src/shape/Arc.js","../../src/shape/Circle.js","../../src/shape/Rectangle.js","../../src/InputDeviceTracker.js","../../src/MChart.js","../../src/geometry/Trigo.js","../../src/index.js"],"sourcesContent":["/**\n * Create a High Definition Canvas.\n *\n * @param {*} canvas\n * @returns Scaled 2d Context\n */\nexport default function setupHiDefCanvas(canvas) {\n\t// Get the device pixel ratio, falling back to 1.\n\tvar devicePixelRatio = window.devicePixelRatio || 1;\n\n\tvar ctx = canvas.getContext(\"2d\");\n\n\tconsole.log(\"─────────────────────────\")\n\tconsole.log(\"│ setupHiDefCanvas      │\")\n\tconsole.log(\"─────────────────────────\")\n\tconsole.log(\"  devicePixelRatio : \" + devicePixelRatio)\n\tconsole.log(\"  canvas.width  : \" + canvas.width)\n\tconsole.log(\"  canvas.height : \" + canvas.height)\n\n\t// Get the size of the canvas in CSS pixels.\n\tvar rect = canvas.getBoundingClientRect();\n\tconsole.log(\"  rect.width  : \" + rect.width)\n\tconsole.log(\"  rect.height : \" + rect.height)\n\n    const initialWidth = canvas.width;\n    const initialHeight = canvas.height;\n\n\n\t// On Hi Def like Retina display we double the size of the canvas\n\tcanvas.width = initialWidth * devicePixelRatio;\n\tcanvas.height = initialHeight * devicePixelRatio;\n    ctx.scale(devicePixelRatio, devicePixelRatio);\n\n\t// and we shrink the display size using CSS\n\tcanvas.style.width = initialWidth + 'px';\n    canvas.style.height = initialHeight + 'px';\n\n\tconsole.log(\"  canvas.style.width  : \" + canvas.style.width)\n\tconsole.log(\"  canvas.style.height  : \" + canvas.style.height)\n\n\tconsole.log(\"  canvas.width  : \" + canvas.width)\n\tconsole.log(\"  canvas.height : \" + canvas.height)\n\n\tconsole.log(\" └───────────────────────┘\")\n\n\treturn ctx;\n}","\n\nexport default class Renderer {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n    }\n\n    drawGrid(w, h) {\n\n        this.ctx.save()\n\n        this.ctx.fillStyle = 'white'\n        this.ctx.fillRect(0, 0, w, h)\n        this.ctx.lineWidth = 0.3;\n        this.ctx.strokeStyle = 'lightgray'\n        this.ctx.fillStyle = 'black'\n\n        for (let i = 1; i < w; i++) {\n            this.ctx.beginPath()\n            if (i % 10 === 0) {\n                this.ctx.moveTo(i, 0);\n                this.ctx.lineTo(i, h)\n                this.ctx.moveTo(i, 0);\n            }\n            this.ctx.closePath()\n            this.ctx.stroke()\n        }\n\n        for (let i = 1; i < h; i++) {\n            this.ctx.beginPath()\n            if (i % 10 === 0) {\n                this.ctx.moveTo(0, i)\n                this.ctx.lineTo(w, i)\n                this.ctx.moveTo(0, i)\n            }\n            this.ctx.closePath()\n            this.ctx.stroke()\n        }\n\n\n        this.ctx.lineWidth = 1\n        this.ctx.strokeStyle = 'gray'\n\n        this.ctx.beginPath()\n        for (let i = 50; i < w; i += 10) {\n            if (i % 50 === 0) {\n                this.ctx.moveTo(i, 0)\n                this.ctx.lineTo(i, 30)\n                this.ctx.fillText(` ${i}`, i, 30)\n            } else {\n                this.ctx.moveTo(i, 0)\n                this.ctx.lineTo(i, 10)\n            }\n\n        }\n        this.ctx.closePath()\n        this.ctx.stroke()\n\n        this.ctx.beginPath()\n        for (let i = 50; i < h; i += 10) {\n            if (i % 50 === 0) {\n                this.ctx.moveTo(0, i)\n                this.ctx.lineTo(30, i)\n                this.ctx.fillText(` ${i}`, 30, i)\n            } else {\n                this.ctx.moveTo(0, i)\n                this.ctx.lineTo(10, i)\n            }\n\n        }\n        this.ctx.closePath()\n        this.ctx.stroke()\n\n        this.ctx.restore()\n    }\n}","/**\n *  A vector is an entity that has both magnitude and direction.\n *  2D vector implementation based on the vector functions in P5.js\n */\n export class Vector {\n\tconstructor(x, y) {\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\n\t\tif (isNaN(x) || isNaN(y)) {\n\t\t\tconsole.warn(`Vector(): parameters are not number: (${x}), ${y} `);\n\t\t}\n\t}\n\n\tstatic add(v1, v2) {\n\t\treturn new Vector(v1.x + v2.x, v1.y + v2.y);\n\t}\n\n\t/**\n\t * Divides a vector by a scalar and returns a new vector.\n\t *\n\t * @method div\n\t * @static\n\t * @param  {Vector} v\n\t * @param  {Number}  n\n\t * @return  {Vector}\n\t */\n\tstatic div(v, n) {\n\t\tlet result = v.copy();\n\t\treturn result.div(n);\n\t}\n\n\t/**\n\t * Linear interpolate the vector to another vector\n\t */\n\tstatic lerp(v1, v2, amount) {\n\t\tlet result = v1.copy();\n\t\treturn result.lerp(v2, amount);\n\t}\n\n\tstatic random(min, max) {\n\t\tlet x = randomIntBounds(min, max);\n\t\tlet y = randomIntBounds(min, max);\n\t\treturn new Vector(x, y);\n\t}\n\n\tstatic sub(v1, v2) {\n\t\treturn new Vector(v1.x - v2.x, v1.y - v2.y);\n\t}\n\n\t/**\n\t * Supports adding a Vector or a Scalar\n\t * @param {*} n\n\t * @returns\n\t */\n\tadd(n) {\n\t\tif (n instanceof Vector) {\n\t\t\tthis.x += n.x;\n\t\t\tthis.y += n.y;\n\t\t\treturn this;\n\t\t} else if (typeof n === \"number\") {\n\t\t\tthis.x += n;\n\t\t\tthis.y += n;\n\t\t\treturn this;\n\t\t} else {\n\t\t\tconsole.error(`Parameter in Vector.add(n) Not supported: ${n})`);\n\t\t}\n\t}\n\n\t/**\n\t * Return a copy of this Vector\n\t * @returns\n\t */\n\tcopy() {\n\t\treturn new Vector(this.x, this.y);\n\t}\n\n\t/**\n\t * Divide vector length (ie magnitude) by a constant  \n\t */ \n\tdiv(n) {\n\t\tif (n === 0) {\n\t\t\t//console.warn(\"Vector.div:\", \"divide by 0\");\n\t\t\treturn this;\n\t\t}\n\t\tthis.x /= n;\n\t\tthis.y /= n;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Linear Interpolation\n\t */ \n\tlerp(v1, amount) {\n\t\tthis.x += (v1.x - this.x) * amount || 0;\n\t\tthis.y += (v1.y - this.y) * amount || 0;\n\t\treturn this;\n\t}\n\t/**\n\t * Returns the direction of the Vector\n\t * @returns \n\t */\n\theading() {\n\t\tconst h = Math.atan2(this.y, this.x);\n\t\treturn h;\n\t}\n\n\tmagSq() {\n\t\tconst x = this.x;\n\t\tconst y = this.y;\n\t\treturn x * x + y * y;\n\t}\n\n\tmag() {\n\t\treturn Math.sqrt(this.magSq());\n\t}\n\n\tnormalize() {\n\t\treturn this.div(this.mag());\n\t}\n\n\t/**\n\tMultiply vector length (ie magnitude) by a constant\n\t*/\n\tmult(n) {\n\t\tif (isNaN(n)) {\n\t\t\tconsole.error(`Vector.mult: parameter is not a number: (${n})`);\n\t\t}\n\t\tthis.x *= n;\n\t\tthis.y *= n;\n\t\treturn this;\n\t}\n\n\t/**\n\t *  set magnitude to a given value\n\t */\n\tsetMag(n) {\n\t\treturn this.normalize().mult(n);\n\t}\n\n\n\t/**\n\t * Substracts either a Vector or a scalar\n\t * @param {*} n \n\t * @returns \n\t */\n\tsub(n) {\n\t\tif (n instanceof Vector) {\n\t\t\tthis.x -= n.x;\n\t\t\tthis.y -= n.y;\n\t\t\treturn this;\n\t\t} else if (typeof n === \"number\") {\n\t\t\tthis.x -= n;\n\t\t\tthis.y -= n;\n\t\t\treturn this;\n\t\t} else {\n\t\t\tconsole.error(`Parameter in Vector.sub(n) Not supported: ${n})`);\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn \"[\" + this.x + \", \" + this.y + \"]\";\n\t}\n}\n\n/* Return a random integer between min and max (inclusive) */\nfunction randomIntBounds(min, max) {\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default Vector;","\n export function rectContainsShape(rectangle, shape) {\n\tif (shape.type == \"Circle\") {\n\t\treturn rectContainsCircle(rectangle, shape);\n\t} else if (shape.type == \"Rectangle\") {\n\t\treturn rectContainsRect(rectangle, shape);\n\t} else {\n\t\tconsole.error(\"rectContainsShape: shape is unknown: \" + shape);\n\t\tconsole.error( shape);\n\t}\n}\n\n/**\n *\n *\n *    x,y\n *    ┌────────────────────────┐ width\n *    │  x,y             width │\n *    │  ┌──────────────────┐  │\n *    │  │                  │  │\n *    │  │                  │  │\n *    │  │                  │  │\n *    │  └──────────────────┘  │\n *    │                  heigth│\n *    └────────────────────────┘ heigth\n\n * @param {*} rect1 \n * @param {*} rect2 \n * @returns \n */\n/*\n function rectContainsRect(rect1, rect2) {\n\tconsole.log(\"rectContainsRect\");\n\t// console.log(rect1.toStringCoordinates());\n\t// console.log(rect2.toStringCoordinates());\n\n\tvar result_X =\n\t\trect1.getX() < rect2.getX() &&\n\t\trect1.getX() + rect1.getWidth() < rect2.getX() + rect2.getWidth();\n\n\tvar result_Y =\n\t\trect1.getY() > rect2.getY() &&\n\t\trect1.getY() + rect1.getHeight() <= rect2.getY() + rect2.getHeight();\n\n\treturn result_X & result_Y;\n}\n*/\n\nfunction rectContainsRect(rect1, rect2) {\n\tvar result_X =\n\t\trect1.x < rect2.x && rect1.x + rect1.width > rect2.x + rect2.width;\n\n\tvar result_Y =\n\t\trect1.y < rect2.y && rect1.y + rect1.height > rect2.y + rect2.height;\n\n\treturn result_X & result_Y;\n}\n\n\n\n\n\nfunction rectContainsCircle(rectangle, circle) {\n\t// LEFT\n\tvar left_include = rectangle.x < circle.x - circle.radius;\n\tif (!left_include) {\n\t\t//circle is outside of the rectangle on the left side\n\t\treturn false;\n\t}\n\t// RIGHT\n\tvar right_include =\n\t\trectangle.x + rectangle.width > circle.x + circle.radius;\n\tif (!right_include) {\n\t\t//circle is outside of the rectangle on the right side\n\t\treturn false;\n\t}\n\t// BOTTOM\n\tvar bottom_include =\n\t\trectangle.y + rectangle.height > circle.y + circle.radius;\n\tif (!bottom_include) {\n\t\t//circle is outside of the rectangle on the bottom side\n\t\treturn false;\n\t}\n\t// TOP:\n\tvar top_include = rectangle.y < circle.y - circle.radius;\n\tif (!top_include) {\n\t\t//circle is outside of the rectangle on the top side\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n","export default class Link {\n\tconstructor(source, target) {\n\t\tif (source.id && target.id) {\n\t\t\tthis.id = source.id + \" → \" + target.id;\n\t\t} else {\n\t\t\tthis.id = source + \" → \" + target;\n\t\t}\n\t\tthis.source = source;\n\t\tthis.target = target;\n\t}\n}\n","import Vector from \"../geometry/Vector\";\n\n\nexport default class Node {\n\tconstructor(id, data) {\n\t\tthis.id = id;\n\n\t\tthis.data = data;\n\t\tthis.level = 0;\n\t\tthis.children = [];\n\n\t\tthis.isCollapsed = false;\n\n\t\tthis.size = 20;\n\t\tthis.mass = 13; //(6 * this.size) / 1.5;\n\t\tthis.radius = this.size;\n\n\t\tthis.pos = new Vector(0, 0);\n\t\tthis.velocity = new Vector(0, 0);\n\t\tthis.acceleration = new Vector(0, 0);\n\t}\n\n\ttoString() {\n\t\treturn \"Node \" + this.id + \" (\" + this.pos.x + \", \" + this.pos.y + \")\";\n\t}\n\n\taddChild(node) {\n\t\tthis.children.push(node);\n\t}\n\n\tgetAdjacents() {\n\t\treturn this.children;\n\t}\n\n\tisAdjacent(node) {\n\t\treturn this.children.indexOf(node) > -1;\n\t}\n\n\t\n}\n","// =============================================================\n//                          Graph\n// =============================================================\nimport Link from \"./Link\";\nimport Node from \"./Node\";\n\nexport default class Graph {\n  constructor() {\n    this.graph = {};\n    this.nodeList = new Map();\n    this.linkList = [];\n    this.adjacency = {};\n    this.changed = false;\n    this.root;\n  }\n\n  /**\n   * Add a node\n   * @param {*} node\n   * @returns\n   */\n  addNode(node) {\n    if (!(node.id in this.graph)) {\n      this.nodeList.set(node.id, node); //\tthis.nodeList.push(node);\n      this.graph[node.id] = node;\n    } else {\n      console.error(\"Node already exists: \" + node.id);\n    }\n    return node;\n  }\n  getNode(nodeId) {\n    //var node = this.graph[nodeId];\n    return this.nodeList.get(nodeId);\n  }\n  removeNode(nodeId) {\n    this.nodeList.delete(nodeId);\n  }\n\n  /**\n   *  Add an object. Create a node from the specified object\n   * @param {*} object\n   * @returns\n   */\n  addObject(object) {\n    var node = new Node(object.id, object);\n\n    if (object.parentId) {\n      node.parent = this.getNode(object.parentId);\n      if (!node.parent) {\n        console.error(\"Parent node not found for parentId: \" + object.parentId);\n      } else {\n        node.level = node.parent.level + 1;\n        node.parent.children.push(node);\n      }\n    } else {\n      this.root = node;\n    }\n    this.addNode(node);\n    this.changed = true;\n    return node;\n  }\n\n  getLinkCount() {\n    return this.linkList.length;\n  }\n  getNodeCount() {\n    //return this.nodeList.length;\n    return this.nodeList.size;\n  }\n\n  addLink(sourceNode_id, targetNode_id) {\n    var sourceNode = this.getNode(sourceNode_id);\n    if (sourceNode == undefined) {\n      throw new TypeError(\"Trying to add a link to the non-existent node with id: \" + sourceNode_id);\n    }\n    var targetNode = this.getNode(targetNode_id);\n    if (targetNode == undefined) {\n      throw new TypeError(\"Trying to add a link to the non-existent node with id: \" + targetNode_id);\n    }\n\n    var link = new Link(sourceNode, targetNode);\n    var exists = false;\n\n    this.linkList.forEach(function (item) {\n      if (link.id === item.id) {\n        exists = true;\n      }\n    });\n\n    if (!exists) {\n      this.linkList.push(link);\n      sourceNode.addChild(targetNode);\n    } else {\n      console.log(\"LINK EXIST: \" + \" source: \" + link.source.id + \" => \" + link.target.id);\n    }\n\n    if (!(link.source.id in this.adjacency)) {\n      this.adjacency[link.source.id] = {};\n    }\n    if (!(link.target.id in this.adjacency[link.source.id])) {\n      this.adjacency[link.source.id][link.target.id] = [];\n    }\n    this.adjacency[link.source.id][link.target.id].push(link);\n  }\n\n  /**\n   *  JSON input can be either a JSON String or a JSON object\n   * @param {*} json_input\n   */\n  loadJSON(json_input) {\n    console.log(\"Graph.loadJSON: json_string: \");\n    console.log(json_input);\n    var json_object;\n    if (typeof json_input === \"string\") {\n      console.log(\"Graph.loadJSON: input is of type string: \");\n      json_object = JSON.parse(json_input);\n    } else if (typeof json_input === \"object\") {\n      console.log(\"Graph.loadJSON: input is of type object: \");\n      json_object = json_input;\n    }\n\n    var nodes = json_object[\"nodes\"];\n    for (let index = 0; index < nodes.length; index++) {\n      var node = nodes[index];\n      this.addObject(node);\n    }\n\n    var links = json_object[\"links\"];\n    if (links) {\n      for (let index = 0; index < links.length; index++) {\n        var link = links[index];\n        this.addLink(link.source, link.target);\n      }\n    }\n    console.log(\"Graph.loadJSON:  loaded Graph=\");\n    console.log(this.graph);\n  }\n\n  toString() {\n    //return this.nodeList.map(printNode);\n    return Array.from(this.nodeList.values()).map(printNode);\n  }\n}\n\nfunction printNode(node) {\n  var adjacentsRepresentation = \"\";\n  if (node.getAdjacents() == 0) {\n    adjacentsRepresentation = \"no children\";\n  } else {\n    adjacentsRepresentation = node\n      .getAdjacents()\n      .map(function (item) {\n        return item.id;\n      })\n      .join(\", \");\n  }\n  return node.id + \" => \" + adjacentsRepresentation;\n}\n","import Node from \"./Node\";\n\nclass TreeNode extends Node {\n  constructor(nodeID, nodeData, parentID) {\n    super(nodeID, nodeData);\n    this.parentID = parentID;\n    this.children = [];\n    this.parent;\n    //this.neighbor;\n\n    console.log(\"TreeNode: constructor: \", nodeID, nodeData, parentID);\n  }\n\n  addChild(node) {\n    // const childNode = new TreeNode(nodeID, nodeData, this.nodeID);\n    this.children.push(node);\n    return node;\n  }\n\n  getChildAt(i) {\n    return this.children[i];\n  }\n  getFirstChild() {\n    return this.getChildAt(0);\n  }\n  getChildren() {\n    return this.children;\n  }\n  getChildrenCount() {\n    return this.children.length;\n  }\n  /**\n   *  isLeftMost: is this node == to the first child of its parent?\n   */\n  isLeftMost() {\n    if (!this.parent || this.parent === null) {\n      return true;\n    } else {\n      return this.parent.getFirstChild() === this;\n    }\n  }\n\n  /**\n   *  isRightMost: is this node == to the last child of its parent?\n   */\n  isRightMost() {\n    if (!this.parent || this.parent === null) {\n      return true;\n    } else {\n      return this.parent.getLastChild() === this;\n    }\n  }\n\n  getLastChild() {\n    return this.getChildAt(this.getChildrenCount() - 1);\n  }\n\n  getLeftSibling() {\n    if (this.parent === null || this.isLeftMost()) {\n      return null;\n    } else {\n      var index = this.parent.children.indexOf(this);\n      return this.parent.children[index - 1];\n    }\n  }\n\n  isLeaf() {\n    return this.children && this.children.length == 0;\n  }\n  hasChild() {\n    return this.children && this.children.length > 0;\n  }\n\n  isAncestorCollapsed() {\n    if (this.parent == null) {\n      return false;\n    }\n    return this.parent.isCollapsed ? true : this.parent.id === -1 ? false : this.parent.isAncestorCollapsed();\n  }\n\n  getRightSibling() {\n    if (this.parent === null || this.isRightMost()) {\n      return null;\n    } else {\n      var index = this.parent.children.indexOf(this);\n      return this.parent.children[index + 1];\n    }\n  }\n\n  getLeftMostChild() {\n    if (this.getChildrenCount() == 0) return null;\n\n    return this.children[0];\n  }\n\n  getRightMostChild() {\n    if (this.getChildrenCount() == 0) return null;\n\n    return this.children[this.getChildrenCount() - 1];\n  }\n\n  hasLeftSibling() {\n    return !this.isLeftMost();\n  }\n}\n\nexport { TreeNode };\n","import Graph from \"./Graph\";\nimport { TreeNode } from \"./TreeNode\";\n//import Link from \"./Link\";\n\nexport class Tree extends Graph {\n  constructor() {\n    super();\n    this.root = null;\n    this.nodeMap = new Map();\n  }\n\n  setRoot(nodeID) {\n    this.root = nodeID;\n  }\n  getRoot () {\n    return this.root;\n  }\n\n  isRoot(node) {\n    return node === this.root;\n  }\n\n  traverseDF(callback) {\n    function traverse(node) {\n        callback(node);\n        if (node.children) {\n          node.children.forEach(traverse);\n        }\n    }\n    traverse(this.root);\n  }\n\n  traverseBF(callback) {\n    const queue = [this.root];\n    while (queue.length) {\n      const node = queue.shift();\n      callback(node);\n      node.children.forEach((child) => queue.push(child));\n    }\n  }\n\n  loadFromJSON(json) {\n    const data = JSON.parse(json);\n  \n    // create nodes\n    data.nodes.forEach((nodeData) => {\n      const { id, parentId, data } = nodeData;\n      const node = new TreeNode(id, data, parentId);\n      this.nodeMap.set(id, node);\n      // add node to nodesByLevel array\n      //console.log(\"\")\n      //addNodeToLevel(id, parentId, nodesByLevel, node);\n    });\n  \n    // Add child nodes to parent nodes\n    data.nodes.forEach((nodeData) => {\n      const { id, parentId } = nodeData;\n      const node = this.nodeMap.get(id);\n      if (parentId) {\n        const parent = this.nodeMap.get(parentId);\n        parent.addChild(node);\n      } else {\n        this.root = node;\n      }\n    });\n    \n    // Function to add node to nodesByLevel array\n    /*\n    function addNodeToLevel(id, parentId, nodesByLevel, node) {\n\n      const level = parentId ? nodesByLevel[parentId].level + 1 : 0;\n      if (!nodesByLevel[level]) {\n        nodesByLevel[level] = [node];\n      } else {\n        nodesByLevel[level].push(node);\n      }\n      node.level = level;\n    }\n     */\n  }\n  \n\n}\n","/* eslint-disable no-unused-vars */\n\n//import Graph from \"../graph/Graph\";\n//import Node from \"../graph/Node\";\n\n\nexport default class AbstractGraphLayout {\n\n    // need to get nodeWidth & nodeHeight\n    constructor(graph, options) {\n\t\tthis.graph = graph;\n\n    }\n\n    calculate_Positions(graph, starting_vertex, center) {\n        console.error(\"not implemented in AbstractGraphLayout. Make sure to use a concrete layout class.\")\n    }\n}","// =============================================================\n// Force Directed Layout\n// =============================================================\nimport AbstractGraphLayout from \"./AbstractGraphLayout\";\nimport Vector from \"../geometry/Vector\";\n\nexport default class ForceDirected extends AbstractGraphLayout {\n\tconstructor(graph, options) {\n\n\t\tsuper();\n\t\tthis.graph = graph;\n\t\tthis.initNodes();\n\n\t\tconst DEFAULTS = {\n\t\t\tGRAVITY: 0.9,\n\t\t\tREPULSION: 500000,\n\t\t};\n\t\tthis.options = Object.assign({}, DEFAULTS, options);\n\t}\n\n\tinitNodes() {\n\t\tlet min = -1000;\n\t\tlet max = 1000;\n\n\t\tthis.graph.nodeList.forEach((node) => {\n\t\t\tnode.pos = new Vector.random(min, max);\n\t\t});\n\t}\n\n\trun() {\n\t\t//requestAnimationFrame(this.animate);\n\t\tconsole.log(\"run\");\n\t}\n\n\tanimate = () => {\n\t\tconsole.log(\"animate\");\n\t};\n\n\t/**\n\t *  applyForce\n\t *\n\t *  Newton’s second law.\n\t *  Receive a force, divide by mass, and add to acceleration.\n\t */\n\tapplyForce(node, force) {\n\t\tlet forceOverMass = Vector.div(force, node.mass);\n\t\tnode.acceleration.add(forceOverMass);\n\t}\n\n\tupdateNodesVelocity() {\n\t\tthis.graph.nodeList.forEach((node) => {\n\t\t\tlet force_copy = node.acceleration.copy();\n\t\t\tlet forceOverMass = force_copy.div(node.mass);\n\t\t\t//\tnode.velocity.add( forceOverMass );\n\t\t\tnode.pos.add(forceOverMass);\n\n\t\t\t//\tnode.velocity.add(node.acceleration);\n\t\t\t//\tnode.pos.add(node.velocity);\n\t\t\t//\tnode.acceleration.mult(0);\n\t\t});\n\t}\n\n\tapplyForcesTowardsCenter() {\n\t\t// apply force towards center\n\t\tthis.graph.nodeList.forEach((node) => {\n\t\t\tlet gravity = node.pos.copy().mult(-1).mult(this.options.GRAVITY);\n\t\t\tnode.acceleration = gravity;\n\t\t\t//node.applyForce(gravity);\n\t\t\t//console.log(node);\n\t\t});\n\t}\n\n\tapplyRepulsiveForces() {\n\t\t// apply repulsive force between nodes\n\t\tlet nodeValues = Array.from(this.graph.nodeList.values());\n\n\t\tfor (let i = 0; i < nodeValues.length - 1; i++) {\n\t\t\tfor (let j = i + 1; j < nodeValues.length; j++) {\n\t\t\t\tif (i != j) {\n\t\t\t\t\tlet node1 = nodeValues[i];\n\t\t\t\t\tlet node2 = nodeValues[j];\n\t\t\t\t\t//console.log(\"applyRepulsiveForces\");\n\t\t\t\t\t//console.log(node1);\n\t\t\t\t\t//console.log(node2);\n\n\t\t\t\t\t// The gravitational force F between two bodies of mass m1 and m2 is\n\t\t\t\t\t// F = G*m1*m2 / r2\n\t\t\t\t\t// the vector that points from one object to the other\n\t\t\t\t\tlet dir = Vector.sub(node2.pos, node1.pos);\n\t\t\t\t\t// let unit = dir.copy().normalize()\n\n\t\t\t\t\t// the length (magnitude) of that vector is the distance between the two objects.\n\t\t\t\t\tlet distance = dir.mag();\n\n\t\t\t\t\t// The strength of the force is inversely proportional to the distance squared.\n\t\t\t\t\t// The farther away an object is, the weaker the force; the closer, the stronger.\n\t\t\t\t\t// original  : without the normalize\n\t\t\t\t\tdir.normalize();\n\n\t\t\t\t\tlet force1 = dir.mult(this.options.REPULSION);\n\t\t\t\t\tforce1.div(distance * distance);\n\n\t\t\t\t\tlet inverseForce = force1.copy().mult(-1);\n\t\t\t\t\tnode2.acceleration.add(force1);\n\t\t\t\t\tnode1.acceleration.add(inverseForce);\n\n\t\t\t\t\t//node2.applyForce(force1);\n\t\t\t\t\t//node1.applyForce(inverseForce);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tapplyForcesExertedByConnections() {\n\t\tthis.graph.linkList.forEach((link) => {\n\t\t\tlet node1 = link.source;\n\t\t\tlet node2 = link.target;\n\n\t\t\t//let maxDis = con[2];\n\t\t\t//let connector_length = 100;\n\n\t\t\tlet dir = Vector.sub(node1.pos, node2.pos);\n\n\t\t\tlet neg_force = new Vector(0, 0).sub(dir);\n\t\t\tlet pos_force = new Vector(0, 0).add(dir);\n\n\t\t\tnode1.acceleration.add(neg_force);\n\t\t\tnode2.acceleration.add(pos_force);\n\n\t\t\t//node1.applyForce(neg_force);\n\t\t\t//node2.applyForce(pos_force);\n\t\t});\n\t}\n\n\tapplyForces() {\n\t\t// Force equals mass times acceleration.\n\t\t// Newton’s second law, F→=M×A→ (or force = mass * acceleration).\n\t\tthis.applyForcesTowardsCenter();\n\n\t\tthis.applyRepulsiveForces();\n\n\t\tthis.applyForcesExertedByConnections();\n\n\t\tthis.updateNodesVelocity();\n\n\t\t// kinetic energy (KE) is equal to half of an object's mass (1/2*m) multiplied by the velocity squared.\n\t\t/*\n\t\tlet total_KE = 0.0;\n\t\tthis.graph.nodeList.forEach((node) => {\n\t\t\tlet velocity = node.velocity.mag();\n\n\t\t\tlet node_KE = 0.5 * node.mass * (velocity * velocity);\n\t\t\ttotal_KE = + node_KE;\n\n\t\t});\n\t\tconsole.warn(\"total_KE= \" + total_KE);\n\t\t*/\n\t}\n}\n","import AbstractGraphLayout from \"./AbstractGraphLayout\";\n\nexport default class TreeLayout extends AbstractGraphLayout {\n\n  constructor(tree) {\n    super(tree);\n    /**\n\t\t * lastNodeAtLevel: stores the last node visited at each level to set as left most nodes' neighbor\n\t\t */\n\t\tthis.lastNodeAtLevel = [];\n\n    const firstWalk = (node, level) => {\n      console.log(\"firstWalk\", node, level);\n\n      // private function implementation\n      node.prelim = 0;\n      node.modifier = 0;\n      node.width = node.width || this.nodeWidth;\n      node.height = node.height || this.nodeHeight;\n\n      setNodeNeighbor(node, level);\n\n      //\n      let leftSibling = node.getLeftSibling();\n\t\t\tconsole.log(\"leftSibling  = \" + leftSibling);\n\n    };\n\n    const setNodeNeighbor = (node) => {\n      console.log(\"setNodeNeighbor\", node.toString());\n      let isLeftMost = node.isLeftMost();\n      let isRightMost = node.isRightMost();\n      console.log(\"setNodeNeighbor NODE= \" + node.id + \" , level= \" + node.level + \", isLeftMost(\" + isLeftMost + \")\" + \", isRightMost(\" + isRightMost + \")\");\n      if (isRightMost) {\n        //console.log(\"\\\\_setNodeNeighbor lastNodeAtLevel      = \" + node.id);\n        //console.log(\"\\\\_setNodeNeighbor this.lastNodeAtLevel[node.level]       = \" + node);\n        this.lastNodeAtLevel[node.level] = node;\n      }\n      else if (isLeftMost) {\n        node.neighbor = this.lastNodeAtLevel[node.level];\n        if (node.neighbor) {\n          //console.log(\"\\\\_setNodeNeighbor of \" + node.id + \" to \" + node.neighbor.id);\n        }\n      }\n      else {\n        // has no subtree to move \n        //console.log(\"\\\\_setNodeNeighbor      = \" + node + \"  DO nothing\");\n      }\n    }\n\n    // PUBLIC FUNCTIONS\n    this.calculate_Positions = (root, center) => {\n\n      console.log(\"calculate_Positions\", this, center);\n      //var root = this.graph.getRoot();\n      console.log(\"root\", root);\n      let starting_node = root;\n\n      // call the private function\n      firstWalk(starting_node, 0);\n\n      // public function implementation\n    };\n  }\n}","\n\nexport var NONE = \"none\";\nexport var pi = Math.PI;\n","import {NONE} from './Constants.js';\n\nexport default class Shape {\n    constructor(x, y, type) {\n        this.type = type;\n        this.x = x;\n        this.y = y;\n        this.isSelected = false;\n        this.strokeStyle = NONE;\n\n    }\n    getColor() {\n        return this.color;\n    }\n}","import Shape from './Shape.js';\nimport { NONE } from './Constants.js';\n\nexport default class Arc extends Shape {\n  constructor(x, y, radius, radians) {\n    super(x, y, \"Arc\");\n    this.radius = radius;\n    this.radians = radians;\n  }\n  isHit(x, y) {\n    var dx = this.x - x;\n    var dy = this.y - y;\n    if (dx * dx + dy * dy < this.radius * this.radius) {\n      return true;\n    }\n  }\n  render(ctx) {\n    ctx.save();\n\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, this.radians, false);\n\n    if (this.fillStyle) {\n      ctx.fillStyle = this.fillStyle;\n      ctx.fill();\n    }\n\n    if (this.strokeStyle != NONE) {\n      ctx.strokeStyle = this.strokeStyle;\n      ctx.lineWidth = this.lineWidth;\n      ctx.stroke();\n    }\n\n    ctx.restore();\n  }\n}","import Arc from './Arc.js';\n\n\nexport default class Circle extends Arc {\n    constructor(x, y, radius) {\n      super(x, y, radius, Math.PI *2);\n      this.type = \"Circle\";\n    }\n    isHit(x, y) {\n      var dx = this.x - x;\n      var dy = this.y - y;\n      if (dx * dx + dy * dy < this.radius * this.radius) {\n        return true;\n      }\n    }\n\n    getBBox() {\n      return {\n        x: this.x - this.radius,\n        y: this.y - this.radius,\n        width : this.radius * 2,\n        height : this.radius * 2\n      }\n    }\n  }","import Shape from './Shape.js';\nimport { NONE } from './Constants.js';\n\n\nexport default class Rectangle extends Shape {\n    constructor(x, y, width, height) {\n        super(x, y, \"Rectangle\");\n        this.width = width;\n        this.height = height;\n    }\n    getArea() {\n        return this.width * this.height;\n    }\n\n    isHit(x, y) {\n        if (\n            x > this.x &&\n            x < this.x + this.width &&\n            y > this.y &&\n            y < this.y + this.height\n        ) {\n            return true;\n        }\n    }\n    render(ctx) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(\n            this.x,\n            this.y,\n            this.width,\n            this.height\n        );\n\n        if (this.fillStyle) {\n            ctx.fillStyle = this.fillStyle;\n            ctx.fill();\n        }\n        if (this.strokeStyle != NONE) {\n            ctx.strokeStyle = this.strokeStyle;\n            ctx.lineWidth = this.lineWidth;\n            ctx.stroke();\n        }\n        ctx.restore();\n    }\n    toString() {\n        return `rectangle:  (${this.x},${this.y}) x (${this.width},${this.height})`;\n    }\n}","export default class InputDeviceTracker {\n\tconstructor(canvas, callback) {\n\t\tconsole.log(\"InputDeviceTracker ()\");\n\n\t\tthis.canvas = canvas;\n\t\tthis.callback = callback;\n\n\t\t/**\n\t\t *  Stores the panning offset between the initial location and the canvas location after is has been panned\n\t\t */\n\t\tthis.translatedPos = { x: 0, y: 0 };\n\n\t\t/**\n\t\t *  the accumulated horizontal(X) & vertical(Y) panning the user has done in total\n\t\t */\n\t\t(this.netPanningX = 0), (this.netPanningY = 0);\n\n\t\t/**\n\t\t *  coordinates of the last move\n\t\t */\n\t\t(this.lastMoveX = 0), (this.lastMoveY = 0);\n\n\t\tthis.startDragOffset = { x: 0, y: 0 };\n\n\t\tthis.canvas.addEventListener(\"mousedown\", this.onDown.bind(this));\n\t\tthis.canvas.addEventListener(\"mousemove\", this.onMove.bind(this));\n\t\tthis.canvas.addEventListener(\"mouseup\", this.onUp.bind(this));\n\n\t\tthis.canvas.addEventListener(\"touchstart\", this.onDown.bind(this));\n\t\tthis.canvas.addEventListener(\"touchmove\", this.onMove.bind(this));\n\t\tthis.canvas.addEventListener(\"touchend\", this.onUp.bind(this));\n\t}\n\n\tgetCoordinatesFromEvent(evt) {\n\t\tvar rect = self.canvas.getBoundingClientRect();\n\t\tvar offsetTop = rect.top;\n\t\tvar offsetLeft = rect.left;\n\n\t\tif (evt.touches) {\n\t\t\treturn {\n\t\t\t\tx: evt.touches[0].clientX - offsetLeft,\n\t\t\t\ty: evt.touches[0].clientY - offsetTop,\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tx: evt.clientX - offsetLeft,\n\t\t\t\ty: evt.clientY - offsetTop,\n\t\t\t};\n\t\t}\n\t}\n\n\tonDown(event) {\n\t\t// tell the browser we're handling this event\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tvar mouseCoords = this.getCoordinatesFromEvent(event);\n\n\t\t// initial mouse click signaling the start of the dragging motion: we save the location of the user's mouse.\n\t\t// dragging offest = current mouse - panning\n\t\tthis.startDragOffset.x = mouseCoords.x - this.translatedPos.x;\n\t\tthis.startDragOffset.y = mouseCoords.y - this.translatedPos.y;\n\n\t\tthis.callback(\"down\", mouseCoords.x, mouseCoords.y);\n\t}\n\n\tonUp(event) {\n\t\tevent.preventDefault();\n\t\tthis.callback(\"up\");\n\t}\n\n\tonMove(event) {\n\t\t// tell the browser we're handling this event\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\t\tvar mouseCoords = this.getCoordinatesFromEvent(event);\n\t\tthis.callback(\"move\", mouseCoords.x, mouseCoords.y);\n\t}\n}\n","import InputDeviceTracker from \"./InputDeviceTracker\";\nimport { Rectangle, Circle } from \"./shape\";\nimport { Renderer, setupHiDefCanvas } from \"./canvas\";\nimport { rectContainsShape } from \"./geometry\";\n\nexport class MChart {\n\tconstructor(container, options) {\n\t\tconsole.log(\"MChart container()\");\n\t\tconsole.log(container);\n\t\tthis.container = container;\n\t\t(this.startX = 0), (this.startY = 0);\n\t\t(this.lastMoveX = 0), (this.lastMoveY = 0);\n\n\t\tthis.canvas = document.getElementById(\"canvas\");\n\t\t//this.ctx = this.canvas.getContext(\"2d\");\n\t\tthis.ctx = setupHiDefCanvas(this.canvas);\n\n\t\tthis.cw = this.canvas.width;\n\t\tthis.ch = this.canvas.height;\n\n\t\tthis.renderer = new Renderer(this.ctx);\n\t\tthis.inputDeviceTracker = new InputDeviceTracker(\n\t\t\tthis.canvas,\n\t\t\tthis.manageInputEvents.bind(this)\n\t\t);\n\n\t\tconst DEFAULTS = {\n\t\t\tdisplay_grid: false,\n\t\t\tselection: {\n\t\t\t\tstrokeStyle: \"#CC0000\", //  'rgba(255,51,0,1)', //'rgba(0,128,255,1)';\n\t\t\t\tlineWidth: 1,\n\t\t\t\tfillStyle: \"rgba(255,51,0,0.05)\", //'rgba(0,128,255, 0.2)';\n\t\t\t},\n\t\t};\n\t\tthis.options = Object.assign({}, DEFAULTS, options);\n\n\t\t/* The selection rectangle */\n\t\tthis.selection = new Rectangle(100, 100, 100, 100);\n\t\tthis.selection.strokeStyle = this.options.selection.strokeStyle;\n\t\tthis.selection.fillStyle = this.options.selection.fillStyle;\n\t\tthis.selection.lineWidth = this.options.selection.lineWidth;\n\n\t\t/* The list of ojbects to draw */\n\t\tthis.objects = [];\n\n\t\t/**\n\t\t *  Stores the panning offset between the initial location and the canvas location after is has been panned\n\t\t */\n\t\tthis.translatePos = { x: 0, y: 0 };\n\n\t\t/**\n\t\t *  the accumulated horizontal(X) & vertical(Y) panning the user has done in total\n\t\t */\n\t\tthis.netPanningX = 0;\n\t\tthis.netPanningY = 0;\n\n\t\t/**\n\t\t *  coordinates of the last move\n\t\t */\n\t\tthis.lastMoveX = 0; this.lastMoveY = 0;\n\n\t\tthis.isSelecting = false;\n\t\tthis.isDragging = false;\n\t\tthis.clicked_on_the_canvas = false;\n\t}\n\n\tdump() {\n\t\tconsole.log(\"MChart container= \");\n\t\tconsole.log(\"- objects= \");\n\t\tconsole.log(this.objects);\n\t}\n\n\taddObject(object) {\n\t\tthis.objects.push(object);\n\t\t//this.draw();\n\t}\n\n\t/**\n\t *  Private function to render one frame. It is being called by render()\n\t */\n\trenderFrame = () => {\n\t\t// console.log(\"renderFrame\")\n\t\tthis.ctx.clearRect(0, 0, this.cw, this.ch);\n\n\t\tif (this.options.display_grid) {\n\t\t\tthis.renderer.drawGrid(this.cw, this.ch);\n\t\t}\n\n\t\tthis.objects.forEach((object) => {\n\t\t\tobject.render(this.ctx);\n\t\t\tif (object.isSelected) {\n\t\t\t\tvar selection;\n\t\t\t\tif (object instanceof Circle) {\n\t\t\t\t\tvar bbox = object.getBBox();\n\t\t\t\t\tselection = new Rectangle(\n\t\t\t\t\t\tbbox.x,\n\t\t\t\t\t\tbbox.y,\n\t\t\t\t\t\tbbox.width,\n\t\t\t\t\t\tbbox.height\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tselection = new Rectangle(\n\t\t\t\t\t\tobject.x,\n\t\t\t\t\t\tobject.y,\n\t\t\t\t\t\tobject.width,\n\t\t\t\t\t\tobject.height\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tselection.strokeStyle = this.options.selection.strokeStyle;\n\t\t\t\tselection.lineWidth = this.options.selection.lineWidth;\n\t\t\t\tselection.render(this.ctx);\n\n\t\t\t}\n\n\t\t\tif (this.isSelecting == true) {\n\t\t\t\tthis.selection.render(this.ctx);\n\t\t\t}\n\t\t});\n\t};\n\n\trender() {\n\t\tthis.renderFrame();\n\t\twindow.requestAnimationFrame(this.render.bind(this, this.canvas));\n\t}\n\n\tmanageInputEvents(evtType, x, y) {\n\t\tswitch (evtType) {\n\t\t\tcase \"down\":\n\t\t\t\tthis.mouseIsDown = true;\n\n\t\t\t\tthis.startX = x;\n\t\t\t\tthis.startY = y;\n\t\t\t\tthis.lastMoveX = x;\n\t\t\t\tthis.lastMoveY = y;\n\n\t\t\t\t/* we assume the user clicked on the canvas unless we find an object was hit */\n\t\t\t\tthis.clicked_on_the_canvas = true;\n\n\t\t\t\t// we start from last to check the shape that is on top first\n\t\t\t\tfor (var i = this.objects.length - 1; i >= 0; i--) {\n\t\t\t\t\tvar object = this.objects[i];\n\t\t\t\t\t//    console.log (\"checking for hit object = \" + object.color);\n\t\t\t\t\tif (object.isHit(x, y)) {\n\t\t\t\t\t\tobject.isSelected = true;\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\"Clicked on : \" +\n\t\t\t\t\t\t\t\tobject.constructor.name +\n\t\t\t\t\t\t\t\t\"/\" +\n\t\t\t\t\t\t\t\tobject.fillStyle\n\t\t\t\t\t\t);\n\t\t\t\t\t\tmoveObjectToLastPosition(this.objects, object);\n\t\t\t\t\t\tthis.clicked_on_the_canvas = false;\n\t\t\t\t\t\tthis.isSelecting = false;\n\t\t\t\t\t\tthis.isDragging = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(\n\t\t\t\t\t\"clicked on the canvas = \" + this.clicked_on_the_canvas\n\t\t\t\t);\n\n\t\t\t\tif (this.clicked_on_the_canvas) {\n\t\t\t\t\tconsole.log(\"clicked on the canvas\");\n\t\t\t\t\tthis.selection_startX = x;\n\t\t\t\t\tthis.selection_startY = y;\n\n\t\t\t\t\t/* reset selection if user clicked on the canvas */\n\t\t\t\t\tthis.objects.forEach((object) => {\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\"RESET object \" +\n\t\t\t\t\t\t\t\tobject.fillStyle +\n\t\t\t\t\t\t\t\t\" is Circle ? \" +\n\t\t\t\t\t\t\t\t(object instanceof Circle)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tobject.isSelected = false;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase \"up\":\n\t\t\t\tthis.mouseIsDown = false;\n\t\t\t\tconsole.log(\"MOUSE UP\");\n\t\t\t\tconsole.log(\" isDragging : \" + this.isDragging);\n\t\t\t\tconsole.log(\" isSelecting : \" + this.isSelecting);\n\n\t\t\t\tif (this.isSelecting) {\n\t\t\t\t\tconsole.log(\" selection : \" + this.selection);\n\t\t\t\t\t/* check if selection includes any object */\n\t\t\t\t\tthis.objects.forEach((object) => {\n\t\t\t\t\t\tif (rectContainsShape(this.selection, object)) {\n\t\t\t\t\t\t\tobject.isSelected = true;\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"object is selected: \" +\n\t\t\t\t\t\t\t\t\tobject.constructor.name +\n\t\t\t\t\t\t\t\t\t\"/\" +\n\t\t\t\t\t\t\t\t\tobject.fillStyle\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.isSelecting = false;\n\t\t\t\tthis.isDragging = false;\n\t\t\t\tbreak;\n\n\t\t\tcase \"move\":\n\t\t\t\tif (this.clicked_on_the_canvas && this.mouseIsDown) {\n\t\t\t\t\tthis.isSelecting = true;\n\t\t\t\t\t// getting the min & max to handle when the user selects from bottom right to top left\n\t\t\t\t\tconst x1 = Math.min(this.selection_startX, this.lastMoveX);\n\t\t\t\t\tconst y1 = Math.min(this.selection_startY, this.lastMoveY);\n\t\t\t\t\tconst x2 = Math.max(this.selection_startX, this.lastMoveX);\n\t\t\t\t\tconst y2 = Math.max(this.selection_startY, this.lastMoveY);\n\n\t\t\t\t\tthis.selection.x = Math.floor(x1);\n\t\t\t\t\tthis.selection.y = Math.floor(y1);\n\t\t\t\t\tthis.selection.width = Math.floor(x2 - x1);\n\t\t\t\t\tthis.selection.height = Math.floor(y2 - y1);\n\t\t\t\t}\n\t\t\t\tthis.lastMoveX = x;\n\t\t\t\tthis.lastMoveY = y;\n\n\t\t\t\tvar dx = x - this.startX;\n\t\t\t\tvar dy = y - this.startY;\n\n\t\t\t\tthis.startX = x;\n\t\t\t\tthis.startY = y;\n\n\t\t\t\tif (this.isDragging) {\n\t\t\t\t\tthis.objects.forEach((object) => {\n\t\t\t\t\t\tif (object.isSelected) {\n\t\t\t\t\t\t\tobject.x += dx;\n\t\t\t\t\t\t\tobject.y += dy;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tinit() {\n\t\tthis.inputDeviceTracker = new InputDeviceTracker(\n\t\t\tthis.canvas,\n\t\t\tthis.manageInputEvents.bind(this)\n\t\t);\n\t}\n}\n\n/**\n *  We move the node selection to the last position so that it is drawn above the other shapes on the canvas\n */\nfunction moveObjectToLastPosition(object_list, object_to_move) {\n\tobject_list.forEach(function (object, index) {\n\t\tif (object === object_to_move) {\n\t\t\tobject_list.splice(index, 1);\n\t\t\tobject_list.push(object_to_move);\n\t\t\treturn;\n\t\t}\n\t});\n}","// =============================================================\n//                          TRIGO FUNCTIONS\n// =============================================================\nexport const TWO_PI = Math.PI * 2;\n\n/**\n * Concernt mouse (x, y) relative to the center of the circle\n */\nexport function ConvertMousePositionToCoordinateGraph(mousePos, center) {\n  return {\n    x: mousePos.x - center.x,\n    y: -1 * (mousePos.y - center.y)\n  }\n}\n\nexport function to_radians(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\nexport function to_degrees(radians) {\n  return radians * (180 / Math.PI);\n}\n\nexport function distanceXY(x0, y0, x1, y1) {\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nexport function pointInCircle(point, circle) {\n  return distanceXY(point.x, point.y, circle.x, circle.y) < circle.radius;\n}\n\n/**\n * Convert from cartesian coordinates (x, y) to polar coordinates (r, θ).\n * @param {*} cx \n * @param {*} cy \n * @param {*} r \n * @param {*} angle \n * @returns \n */\nexport function getPointOnArc(cx, cy, r, angle) {\n  return {\n    x: cx + r * Math.cos(angle),\n    y: cy + r * Math.sin(angle)\n  };\n}\nexport function __getPointOnArc(point, r, angle) {\n  return {\n    x: point.x + r * Math.cos(angle),\n    y: point.y + r * Math.sin(angle)\n  };\n\n}\nexport function rotate(x, y, angle) {\n  return {\n    x: x * Math.cos(angle) - y * Math.sin(angle),\n    y: x * Math.sin(angle) + y * Math.cos(angle)\n  };\n}\n\n/*\n * Returns the angle θ between 2 points\n */\nfunction findAngle(p1, p2) {\n  var angleRAD = Math.atan2(p2.y - p1.y, p2.x - p1.x);\n  return angleRAD;\n}\n\n/**\n * Calculates the midpoint between two points [x1,y1] &  [x2,y2]\n */\nexport function midpoint(x1, y1, x2, y2) {\n  return {\n    x: (x1 + x2) / 2,\n    y: (y1 + y2) / 2\n  };\n}\n\n\n//bearing between the compass'center point and the specified point\nexport function __getBearing(point) {\n  var compass_points = [\"N\", \"NE\", \"E\", \"SE\", \"S\", \"SW\", \"W\", \"NW\", \"N\"];\n  var bearing = findAngle(\n    { x: this.cx, y: -this.cy },\n    { x: point.x, y: -point.y });\n\n    var bearingTT;\n  if (bearing < 0) {\n     bearingTT = 360 + bearing;\n   } \n   else {\n     bearingTT = bearing;\n   }\n  var compass_lookup = Math.round(bearingTT / 45);\n//  log(bearingTT + \" \" + compass_lookup + \" - \" + bearing);\n  return compass_points[compass_lookup];\n}","\nexport * from \"./canvas\";\nexport * from \"./geometry\";\nexport * from \"./graph\";\nexport * from \"./layout\";\nexport * from \"./shape\";\n\nexport {MChart} from \"./MChart\";\n\nexport var version = \"0.1\"\n\n\n"],"names":["setupHiDefCanvas","canvas","devicePixelRatio","window","ctx","getContext","console","log","width","height","rect","getBoundingClientRect","initialWidth","initialHeight","scale","style","Renderer","w","h","save","fillStyle","fillRect","lineWidth","strokeStyle","i","beginPath","moveTo","lineTo","closePath","stroke","fillText","restore","Vector","x","y","isNaN","warn","n","this","error","v1","amount","Math","atan2","sqrt","magSq","div","mag","normalize","mult","v2","v","copy","lerp","min","max","randomIntBounds","floor","random","rectContainsShape","rectangle","shape","type","circle","radius","rectContainsCircle","rect2","result_X","rect1","result_Y","Link","source","target","id","Node","data","level","children","isCollapsed","size","mass","pos","velocity","acceleration","node","push","indexOf","Graph","graph","nodeList","Map","linkList","adjacency","changed","root","set","nodeId","get","object","parentId","parent","getNode","addNode","length","sourceNode_id","targetNode_id","sourceNode","undefined","TypeError","targetNode","link","exists","forEach","item","addChild","json_input","json_object","JSON","parse","_typeof","nodes","index","addObject","links","addLink","Array","from","values","map","printNode","adjacentsRepresentation","getAdjacents","join","TreeNode","nodeID","nodeData","parentID","getChildAt","getFirstChild","getLastChild","getChildrenCount","isLeftMost","isAncestorCollapsed","isRightMost","Tree","nodeMap","callback","traverse","queue","shift","child","json","_this2","AbstractGraphLayout","options","starting_vertex","center","ForceDirected","initNodes","Object","assign","GRAVITY","REPULSION","force","forceOverMass","add","gravity","nodeValues","j","node1","node2","dir","sub","distance","force1","inverseForce","neg_force","pos_force","applyForcesTowardsCenter","applyRepulsiveForces","applyForcesExertedByConnections","updateNodesVelocity","TreeLayout","tree","lastNodeAtLevel","setNodeNeighbor","toString","neighbor","_this","calculate_Positions","prelim","modifier","nodeWidth","nodeHeight","leftSibling","getLeftSibling","firstWalk","NONE","Shape","isSelected","color","Arc","radians","dx","dy","arc","fill","Circle","PI","Rectangle","InputDeviceTracker","translatedPos","netPanningX","netPanningY","lastMoveX","lastMoveY","startDragOffset","addEventListener","onDown","bind","onMove","onUp","evt","self","offsetTop","top","offsetLeft","left","touches","clientX","clientY","event","preventDefault","stopPropagation","mouseCoords","getCoordinatesFromEvent","MChart","container","clearRect","cw","ch","display_grid","renderer","drawGrid","objects","render","selection","bbox","getBBox","isSelecting","startX","startY","document","getElementById","inputDeviceTracker","manageInputEvents","translatePos","isDragging","clicked_on_the_canvas","renderFrame","requestAnimationFrame","evtType","mouseIsDown","isHit","constructor","name","moveObjectToLastPosition","selection_startX","selection_startY","x1","y1","x2","y2","object_list","object_to_move","splice","degrees"],"mappings":"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"}